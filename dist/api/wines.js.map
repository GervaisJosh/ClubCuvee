{
  "version": 3,
  "sources": ["../../api/wines.ts", "../../src/supabase.ts"],
  "sourcesContent": ["import { supabase } from '../src/supabase';\r\n\r\n\r\nexport interface Wine {\r\n  id?: string;\r\n  name: string;\r\n  varietal: string;\r\n  region: string;\r\n  vintage: number;\r\n  price: number;\r\n  stock: number;\r\n  metadata?: any;\r\n}\r\n\r\nexport const getWines = async (): Promise<Wine[]> => {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('wine_inventory')\r\n      .select('*')\r\n\r\n    if (error) {\r\n      console.error('Error fetching wines:', error)\r\n      return []\r\n    }\r\n\r\n    return data || []\r\n  } catch (err) {\r\n    console.error('Unexpected error in getWines:', err)\r\n    return []\r\n  }\r\n}\r\n\r\nexport const addWine = async (wine: Omit<Wine, 'id'>): Promise<Wine | null> => {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('wine_inventory')\r\n      .insert(wine)\r\n      .single()\r\n\r\n    if (error) {\r\n      console.error('Error adding wine:', error)\r\n      return null\r\n    }\r\n\r\n    return data\r\n  } catch (err) {\r\n    console.error('Unexpected error in addWine:', err)\r\n    return null\r\n  }\r\n}\r\n\r\nexport const updateWine = async (id: string, wine: Partial<Wine>): Promise<Wine | null> => {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('wine_inventory')\r\n      .update(wine)\r\n      .eq('id', id)\r\n      .single()\r\n\r\n    if (error) {\r\n      console.error('Error updating wine:', error)\r\n      return null\r\n    }\r\n\r\n    return data\r\n  } catch (err) {\r\n    console.error('Unexpected error in updateWine:', err)\r\n    return null\r\n  }\r\n}\r\n\r\nexport const deleteWine = async (id: string): Promise<boolean> => {\r\n  try {\r\n    const { error } = await supabase\r\n      .from('wine_inventory')\r\n      .delete()\r\n      .eq('id', id)\r\n\r\n    if (error) {\r\n      console.error('Error deleting wine:', error)\r\n      return false\r\n    }\r\n\r\n    return true\r\n  } catch (err) {\r\n    console.error('Unexpected error in deleteWine:', err)\r\n    return false\r\n  }\r\n}\r\n\r\nexport interface WineRating {\r\n  id?: string;\r\n  user_id: string;\r\n  wine_id: string;\r\n  rating: number;\r\n  review?: string;\r\n}\r\n\r\nexport const addWineRating = async (rating: Omit<WineRating, 'id'>): Promise<WineRating | null> => {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('wine_ratings_reviews')\r\n      .insert(rating)\r\n      .single()\r\n\r\n    if (error) {\r\n      console.error('Error adding wine rating:', error)\r\n      return null\r\n    }\r\n\r\n    return data\r\n  } catch (err) {\r\n    console.error('Unexpected error in addWineRating:', err)\r\n    return null\r\n  }\r\n}\r\n\r\nexport const getWineRatings = async (wineId: string): Promise<WineRating[]> => {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('wine_ratings_reviews')\r\n      .select('*')\r\n      .eq('wine_id', wineId)\r\n\r\n    if (error) {\r\n      console.error('Error fetching wine ratings:', error)\r\n      return []\r\n    }\r\n\r\n    return data || []\r\n  } catch (err) {\r\n    console.error('Unexpected error in getWineRatings:', err)\r\n    return []\r\n  }\r\n}", "// supabase.ts\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\n// Use a singleton pattern to prevent multiple GoTrueClient instances\r\n// https://supabase.com/docs/reference/javascript/initializing\r\n\r\n// Fix for \"Multiple GoTrueClient instances detected\" warning:\r\n// 1. Ensure we use the exact same URL and key in all imports\r\n// 2. Use a global singleton that's only instantiated once\r\n// 3. Add a global window property to ensure browser contexts share the instance\r\n\r\nconst SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL!;\r\nconst SUPABASE_ANON_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY!;\r\n\r\n// Create a global type for the window object to include our supabase instance\r\ndeclare global {\r\n  interface Window {\r\n    __SUPABASE_INSTANCE?: ReturnType<typeof createClient>;\r\n  }\r\n}\r\n\r\n// Use a function that checks for an existing instance in the global window object\r\nconst createSupabaseClient = () => {\r\n  // For SSR (server-side rendering) environments without window\r\n  if (typeof window === 'undefined') {\r\n    return createClient(SUPABASE_URL, SUPABASE_ANON_KEY);\r\n  }\r\n  \r\n  // For browser environments, check window for existing instance\r\n  if (window.__SUPABASE_INSTANCE) {\r\n    return window.__SUPABASE_INSTANCE;\r\n  }\r\n  \r\n  // Create a new instance and store it on the window\r\n  const instance = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);\r\n  window.__SUPABASE_INSTANCE = instance;\r\n  \r\n  return instance;\r\n};\r\n\r\n// Export the singleton instance\r\nexport const supabase = createSupabaseClient();"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACCA,yBAA6B;AAD7B;AAWA,IAAM,eAAe,YAAY,IAAI;AACrC,IAAM,oBAAoB,YAAY,IAAI;AAU1C,IAAM,uBAAuB,MAAM;AAEjC,MAAI,OAAO,WAAW,aAAa;AACjC,eAAO,iCAAa,cAAc,iBAAiB;AAAA,EACrD;AAGA,MAAI,OAAO,qBAAqB;AAC9B,WAAO,OAAO;AAAA,EAChB;AAGA,QAAM,eAAW,iCAAa,cAAc,iBAAiB;AAC7D,SAAO,sBAAsB;AAE7B,SAAO;AACT;AAGO,IAAM,WAAW,qBAAqB;;;AD3BtC,IAAM,WAAW,YAA6B;AACnD,MAAI;AACF,UAAM,EAAE,MAAM,MAAM,IAAI,MAAM,SAC3B,KAAK,gBAAgB,EACrB,OAAO,GAAG;AAEb,QAAI,OAAO;AACT,cAAQ,MAAM,yBAAyB,KAAK;AAC5C,aAAO,CAAC;AAAA,IACV;AAEA,WAAO,QAAQ,CAAC;AAAA,EAClB,SAAS,KAAK;AACZ,YAAQ,MAAM,iCAAiC,GAAG;AAClD,WAAO,CAAC;AAAA,EACV;AACF;AAEO,IAAM,UAAU,OAAO,SAAiD;AAC7E,MAAI;AACF,UAAM,EAAE,MAAM,MAAM,IAAI,MAAM,SAC3B,KAAK,gBAAgB,EACrB,OAAO,IAAI,EACX,OAAO;AAEV,QAAI,OAAO;AACT,cAAQ,MAAM,sBAAsB,KAAK;AACzC,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT,SAAS,KAAK;AACZ,YAAQ,MAAM,gCAAgC,GAAG;AACjD,WAAO;AAAA,EACT;AACF;AAEO,IAAM,aAAa,OAAO,IAAY,SAA8C;AACzF,MAAI;AACF,UAAM,EAAE,MAAM,MAAM,IAAI,MAAM,SAC3B,KAAK,gBAAgB,EACrB,OAAO,IAAI,EACX,GAAG,MAAM,EAAE,EACX,OAAO;AAEV,QAAI,OAAO;AACT,cAAQ,MAAM,wBAAwB,KAAK;AAC3C,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT,SAAS,KAAK;AACZ,YAAQ,MAAM,mCAAmC,GAAG;AACpD,WAAO;AAAA,EACT;AACF;AAEO,IAAM,aAAa,OAAO,OAAiC;AAChE,MAAI;AACF,UAAM,EAAE,MAAM,IAAI,MAAM,SACrB,KAAK,gBAAgB,EACrB,OAAO,EACP,GAAG,MAAM,EAAE;AAEd,QAAI,OAAO;AACT,cAAQ,MAAM,wBAAwB,KAAK;AAC3C,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT,SAAS,KAAK;AACZ,YAAQ,MAAM,mCAAmC,GAAG;AACpD,WAAO;AAAA,EACT;AACF;AAUO,IAAM,gBAAgB,OAAO,WAA+D;AACjG,MAAI;AACF,UAAM,EAAE,MAAM,MAAM,IAAI,MAAM,SAC3B,KAAK,sBAAsB,EAC3B,OAAO,MAAM,EACb,OAAO;AAEV,QAAI,OAAO;AACT,cAAQ,MAAM,6BAA6B,KAAK;AAChD,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT,SAAS,KAAK;AACZ,YAAQ,MAAM,sCAAsC,GAAG;AACvD,WAAO;AAAA,EACT;AACF;AAEO,IAAM,iBAAiB,OAAO,WAA0C;AAC7E,MAAI;AACF,UAAM,EAAE,MAAM,MAAM,IAAI,MAAM,SAC3B,KAAK,sBAAsB,EAC3B,OAAO,GAAG,EACV,GAAG,WAAW,MAAM;AAEvB,QAAI,OAAO;AACT,cAAQ,MAAM,gCAAgC,KAAK;AACnD,aAAO,CAAC;AAAA,IACV;AAEA,WAAO,QAAQ,CAAC;AAAA,EAClB,SAAS,KAAK;AACZ,YAAQ,MAAM,uCAAuC,GAAG;AACxD,WAAO,CAAC;AAAA,EACV;AACF;",
  "names": []
}
