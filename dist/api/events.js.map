{
  "version": 3,
  "sources": ["events.ts", "../src/supabase.ts"],
  "sourcesContent": ["import { supabase } from '../src/supabase';\r\n\r\nexport interface Event {\r\n  id: string;\r\n  event_name: string;\r\n  description: string;\r\n  date: string;\r\n  venue: string;\r\n  attendees: string[];\r\n  created_at: string;\r\n}\r\n\r\nexport const getEvents = async (): Promise<Event[]> => {\r\n  const { data, error } = await supabase\r\n    .from('events')\r\n    .select('*')\r\n\r\n  if (error) {\r\n    console.error('Error fetching events:', error)\r\n    return []\r\n  }\r\n\r\n  return data || []\r\n}\r\n\r\nexport const createEvent = async (eventData: Omit<Event, 'id' | 'created_at'>): Promise<Event | null> => {\r\n  const { data, error } = await supabase\r\n    .from('events')\r\n    .insert(eventData)\r\n    .single()\r\n\r\n  if (error) {\r\n    console.error('Error creating event:', error)\r\n    return null\r\n  }\r\n\r\n  return data\r\n}\r\n\r\nexport const updateEvent = async (id: string, updates: Partial<Event>): Promise<Event | null> => {\r\n  const { data, error } = await supabase\r\n    .from('events')\r\n    .update(updates)\r\n    .eq('id', id)\r\n    .single()\r\n\r\n  if (error) {\r\n    console.error('Error updating event:', error)\r\n    return null\r\n  }\r\n\r\n  return data\r\n}\r\n\r\nexport const deleteEvent = async (id: string): Promise<boolean> => {\r\n  const { error } = await supabase\r\n    .from('events')\r\n    .delete()\r\n    .eq('id', id)\r\n\r\n  if (error) {\r\n    console.error('Error deleting event:', error)\r\n    return false\r\n  }\r\n\r\n  return true\r\n}", "// supabase.ts\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport type { Database } from './types/supabase';\r\n\r\n// Use a singleton pattern to prevent multiple GoTrueClient instances\r\n// https://supabase.com/docs/reference/javascript/initializing\r\n\r\n// Fix for \"Multiple GoTrueClient instances detected\" warning:\r\n// 1. Ensure we use the exact same URL and key in all imports\r\n// 2. Use a global singleton that's only instantiated once\r\n// 3. Add a global window property to ensure browser contexts share the instance\r\n\r\nconst SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL!;\r\nconst SUPABASE_ANON_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY!;\r\n\r\n// Create a global type for the window object to include our supabase instance\r\ndeclare global {\r\n  interface Window {\r\n    __SUPABASE_INSTANCE?: ReturnType<typeof createClient<Database>>;\r\n  }\r\n}\r\n\r\n// Use a function that checks for an existing instance in the global window object\r\nconst createSupabaseClient = () => {\r\n  // For SSR (server-side rendering) environments without window\r\n  if (typeof window === 'undefined') {\r\n    return createClient<Database>(SUPABASE_URL, SUPABASE_ANON_KEY);\r\n  }\r\n  \r\n  // For browser environments, check window for existing instance\r\n  if (window.__SUPABASE_INSTANCE) {\r\n    return window.__SUPABASE_INSTANCE;\r\n  }\r\n  \r\n  // Create a new instance and store it on the window\r\n  const instance = createClient<Database>(SUPABASE_URL, SUPABASE_ANON_KEY);\r\n  window.__SUPABASE_INSTANCE = instance;\r\n  \r\n  return instance;\r\n};\r\n\r\n// Export the singleton instance\r\nexport const supabase = createSupabaseClient();"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACCA,yBAA6B;AAD7B;AAYA,IAAM,eAAe,YAAY,IAAI;AACrC,IAAM,oBAAoB,YAAY,IAAI;AAU1C,IAAM,uBAAuB,MAAM;AAEjC,MAAI,OAAO,WAAW,aAAa;AACjC,eAAO,iCAAuB,cAAc,iBAAiB;AAAA,EAC/D;AAGA,MAAI,OAAO,qBAAqB;AAC9B,WAAO,OAAO;AAAA,EAChB;AAGA,QAAM,eAAW,iCAAuB,cAAc,iBAAiB;AACvE,SAAO,sBAAsB;AAE7B,SAAO;AACT;AAGO,IAAM,WAAW,qBAAqB;;;AD9BtC,IAAM,YAAY,YAA8B;AACrD,QAAM,EAAE,MAAM,MAAM,IAAI,MAAM,SAC3B,KAAK,QAAQ,EACb,OAAO,GAAG;AAEb,MAAI,OAAO;AACT,YAAQ,MAAM,0BAA0B,KAAK;AAC7C,WAAO,CAAC;AAAA,EACV;AAEA,SAAO,QAAQ,CAAC;AAClB;AAEO,IAAM,cAAc,OAAO,cAAuE;AACvG,QAAM,EAAE,MAAM,MAAM,IAAI,MAAM,SAC3B,KAAK,QAAQ,EACb,OAAO,SAAS,EAChB,OAAO;AAEV,MAAI,OAAO;AACT,YAAQ,MAAM,yBAAyB,KAAK;AAC5C,WAAO;AAAA,EACT;AAEA,SAAO;AACT;AAEO,IAAM,cAAc,OAAO,IAAY,YAAmD;AAC/F,QAAM,EAAE,MAAM,MAAM,IAAI,MAAM,SAC3B,KAAK,QAAQ,EACb,OAAO,OAAO,EACd,GAAG,MAAM,EAAE,EACX,OAAO;AAEV,MAAI,OAAO;AACT,YAAQ,MAAM,yBAAyB,KAAK;AAC5C,WAAO;AAAA,EACT;AAEA,SAAO;AACT;AAEO,IAAM,cAAc,OAAO,OAAiC;AACjE,QAAM,EAAE,MAAM,IAAI,MAAM,SACrB,KAAK,QAAQ,EACb,OAAO,EACP,GAAG,MAAM,EAAE;AAEd,MAAI,OAAO;AACT,YAAQ,MAAM,yBAAyB,KAAK;AAC5C,WAAO;AAAA,EACT;AAEA,SAAO;AACT;",
  "names": []
}
