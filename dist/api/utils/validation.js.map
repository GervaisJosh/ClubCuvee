{
  "version": 3,
  "sources": ["../../../api/utils/validation.ts"],
  "sourcesContent": ["// API request validation utilities\r\n\r\nexport interface ValidationError {\r\n  field: string;\r\n  message: string;\r\n}\r\n\r\nexport function validateRequired(\r\n  data: Record<string, any>,\r\n  requiredFields: string[]\r\n): ValidationError[] {\r\n  const errors: ValidationError[] = [];\r\n  \r\n  for (const field of requiredFields) {\r\n    const value = data[field];\r\n    if (value === undefined || value === null || value === '') {\r\n      errors.push({\r\n        field,\r\n        message: `${field} is required`,\r\n      });\r\n    }\r\n  }\r\n  \r\n  return errors;\r\n}\r\n\r\nexport function validateEmail(email: string): boolean {\r\n  const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n  return emailRegex.test(email);\r\n}\r\n\r\nexport function validatePrice(price: string | number): boolean {\r\n  if (typeof price === 'number') {\r\n    return price > 0;\r\n  }\r\n  const priceNum = parseFloat(price);\r\n  return !isNaN(priceNum) && priceNum > 0;\r\n}\r\n\r\nexport function validateRequest(\r\n  data: Record<string, any>,\r\n  requiredFields: string[],\r\n  customValidators?: {\r\n    [field: string]: (value: any) => ValidationError | null;\r\n  }\r\n): { isValid: boolean; errors: ValidationError[] } {\r\n  const errors: ValidationError[] = validateRequired(data, requiredFields);\r\n  \r\n  // Run custom validators if provided\r\n  if (customValidators) {\r\n    for (const [field, validator] of Object.entries(customValidators)) {\r\n      if (data[field] !== undefined && data[field] !== null) {\r\n        const validationResult = validator(data[field]);\r\n        if (validationResult) {\r\n          errors.push(validationResult);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  return {\r\n    isValid: errors.length === 0,\r\n    errors,\r\n  };\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOO,SAAS,iBACd,MACA,gBACmB;AACnB,QAAM,SAA4B,CAAC;AAEnC,aAAW,SAAS,gBAAgB;AAClC,UAAM,QAAQ,KAAK,KAAK;AACxB,QAAI,UAAU,UAAa,UAAU,QAAQ,UAAU,IAAI;AACzD,aAAO,KAAK;AAAA,QACV;AAAA,QACA,SAAS,GAAG,KAAK;AAAA,MACnB,CAAC;AAAA,IACH;AAAA,EACF;AAEA,SAAO;AACT;AAEO,SAAS,cAAc,OAAwB;AACpD,QAAM,aAAa;AACnB,SAAO,WAAW,KAAK,KAAK;AAC9B;AAEO,SAAS,cAAc,OAAiC;AAC7D,MAAI,OAAO,UAAU,UAAU;AAC7B,WAAO,QAAQ;AAAA,EACjB;AACA,QAAM,WAAW,WAAW,KAAK;AACjC,SAAO,CAAC,MAAM,QAAQ,KAAK,WAAW;AACxC;AAEO,SAAS,gBACd,MACA,gBACA,kBAGiD;AACjD,QAAM,SAA4B,iBAAiB,MAAM,cAAc;AAGvE,MAAI,kBAAkB;AACpB,eAAW,CAAC,OAAO,SAAS,KAAK,OAAO,QAAQ,gBAAgB,GAAG;AACjE,UAAI,KAAK,KAAK,MAAM,UAAa,KAAK,KAAK,MAAM,MAAM;AACrD,cAAM,mBAAmB,UAAU,KAAK,KAAK,CAAC;AAC9C,YAAI,kBAAkB;AACpB,iBAAO,KAAK,gBAAgB;AAAA,QAC9B;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AAAA,IACL,SAAS,OAAO,WAAW;AAAA,IAC3B;AAAA,EACF;AACF;",
  "names": []
}
