{"version":3,"file":"BusinessSetup-D1iOBS6l.js","sources":["../../src/pages/onboarding/BusinessSetup.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useSearchParams, useNavigate } from 'react-router-dom';\r\nimport { apiClient } from '../../lib/api-client';\r\nimport Button from '../../components/Button';\r\nimport Card from '../../components/Card';\r\nimport { CheckCircle, Plus, Trash2 } from 'lucide-react';\r\n\r\ninterface BusinessFormData {\r\n  businessName: string;\r\n  adminName: string;\r\n  adminEmail: string;\r\n  adminPassword: string;\r\n  confirmPassword: string;\r\n  tiers: TierFormData[];\r\n}\r\n\r\ninterface TierFormData {\r\n  name: string;\r\n  description: string;\r\n  priceMarkupPercentage: number;\r\n}\r\n\r\nconst BusinessSetup: React.FC = () => {\r\n  const { token } = useParams<{ token: string }>();\r\n  const [searchParams] = useSearchParams();\r\n  const navigate = useNavigate();\r\n  \r\n  const sessionId = searchParams.get('session_id');\r\n  \r\n  const [formData, setFormData] = useState<BusinessFormData>({\r\n    businessName: '',\r\n    adminName: '',\r\n    adminEmail: '',\r\n    adminPassword: '',\r\n    confirmPassword: '',\r\n    tiers: [\r\n      { name: 'Silver', description: 'Entry level wine club membership', priceMarkupPercentage: 15 },\r\n      { name: 'Gold', description: 'Premium wine club membership', priceMarkupPercentage: 25 },\r\n      { name: 'Platinum', description: 'Exclusive wine club membership', priceMarkupPercentage: 35 }\r\n    ]\r\n  });\r\n  \r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [verifyingPayment, setVerifyingPayment] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!token || !sessionId) {\r\n      setError('Missing required parameters');\r\n      setVerifyingPayment(false);\r\n      return;\r\n    }\r\n\r\n    verifyPaymentAndLoadData();\r\n  }, [token, sessionId]);\r\n\r\n  const verifyPaymentAndLoadData = async () => {\r\n    try {\r\n      setVerifyingPayment(true);\r\n      \r\n      // Verify the payment was successful\r\n      const response = await apiClient.post<{\r\n        success: boolean;\r\n        data: {\r\n          subscription: {\r\n            id: string;\r\n            status: string;\r\n            currentPeriodEnd: number;\r\n          };\r\n          pricing_tier: string;\r\n        };\r\n      }>('/api/verify-business-subscription', { token, sessionId });\r\n\r\n      if (response.success && response.data.subscription.status === 'active') {\r\n        // Get the business invitation details to pre-fill admin email\r\n        const inviteResponse = await apiClient.post<{\r\n          success: boolean;\r\n          data: {\r\n            business_name: string;\r\n            business_email: string;\r\n            pricing_tier: string | null;\r\n          };\r\n        }>('/api/validate-business-invitation', { token });\r\n\r\n        if (inviteResponse.success) {\r\n          setFormData(prev => ({\r\n            ...prev,\r\n            businessName: inviteResponse.data.business_name,\r\n            adminEmail: inviteResponse.data.business_email\r\n          }));\r\n        }\r\n      } else {\r\n        setError('Payment verification failed. Please contact support.');\r\n      }\r\n    } catch (err: any) {\r\n      console.error('Error verifying payment:', err);\r\n      setError('Payment verification failed. Please contact support.');\r\n    } finally {\r\n      setVerifyingPayment(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    setError(null);\r\n  };\r\n\r\n  const handleTierChange = (index: number, field: keyof TierFormData, value: string | number) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      tiers: prev.tiers.map((tier, i) => \r\n        i === index ? { ...tier, [field]: value } : tier\r\n      )\r\n    }));\r\n  };\r\n\r\n  const addTier = () => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      tiers: [...prev.tiers, { name: '', description: '', priceMarkupPercentage: 20 }]\r\n    }));\r\n  };\r\n\r\n  const removeTier = (index: number) => {\r\n    if (formData.tiers.length > 1) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        tiers: prev.tiers.filter((_, i) => i !== index)\r\n      }));\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    if (!formData.businessName.trim()) {\r\n      setError('Business name is required');\r\n      return false;\r\n    }\r\n    if (!formData.adminName.trim()) {\r\n      setError('Admin name is required');\r\n      return false;\r\n    }\r\n    if (!formData.adminEmail.trim()) {\r\n      setError('Admin email is required');\r\n      return false;\r\n    }\r\n    if (!formData.adminPassword) {\r\n      setError('Admin password is required');\r\n      return false;\r\n    }\r\n    if (formData.adminPassword !== formData.confirmPassword) {\r\n      setError('Passwords do not match');\r\n      return false;\r\n    }\r\n    if (formData.adminPassword.length < 8) {\r\n      setError('Password must be at least 8 characters long');\r\n      return false;\r\n    }\r\n    if (formData.tiers.length === 0) {\r\n      setError('At least one membership tier is required');\r\n      return false;\r\n    }\r\n    for (const tier of formData.tiers) {\r\n      if (!tier.name.trim()) {\r\n        setError('All tiers must have a name');\r\n        return false;\r\n      }\r\n      if (!tier.description.trim()) {\r\n        setError('All tiers must have a description');\r\n        return false;\r\n      }\r\n      if (tier.priceMarkupPercentage < 0 || tier.priceMarkupPercentage > 100) {\r\n        setError('Price markup percentage must be between 0 and 100');\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await apiClient.post<{\r\n        success: boolean;\r\n        data: {\r\n          businessId: string;\r\n          adminUserId: string;\r\n        };\r\n      }>('/api/create-business', {\r\n        token,\r\n        sessionId,\r\n        businessData: formData\r\n      });\r\n\r\n      if (response.success) {\r\n        // Redirect to success page or business dashboard\r\n        navigate(`/onboard/${token}/success`);\r\n      } else {\r\n        setError('Failed to create business. Please try again.');\r\n      }\r\n    } catch (err: any) {\r\n      console.error('Error creating business:', err);\r\n      setError(err.message || 'Failed to create business. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (verifyingPayment) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-[#fdfaf7] px-6 py-10\">\r\n        <div className=\"text-center\">\r\n          <div className=\"h-12 w-12 animate-spin border-4 border-[#800020] border-t-transparent rounded-full mx-auto mb-6\"></div>\r\n          <p className=\"text-gray-600 text-lg\">Verifying your payment...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error && !formData.adminEmail) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-[#fdfaf7] px-6 py-10\">\r\n        <Card className=\"max-w-md mx-auto p-8 text-center\">\r\n          <div className=\"text-red-500 mb-4\">‚ùå</div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-4\">Setup Error</h1>\r\n          <p className=\"text-gray-600 mb-6\">{error}</p>\r\n          <Button onClick={() => navigate('/landing')} variant=\"secondary\" className=\"w-full\">\r\n            Return Home\r\n          </Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-[#fdfaf7] px-6 py-10\">\r\n      <div className=\"max-w-4xl mx-auto\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-8\">\r\n          <CheckCircle className=\"h-16 w-16 text-green-500 mx-auto mb-4\" />\r\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-2\">\r\n            Payment Successful!\r\n          </h1>\r\n          <p className=\"text-xl text-gray-600\">\r\n            Now let's set up your business and wine club tiers\r\n          </p>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-8\">\r\n          {/* Business Information */}\r\n          <Card className=\"p-6\">\r\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Business Information</h2>\r\n            \r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <div>\r\n                <label htmlFor=\"businessName\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Business Name *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"businessName\"\r\n                  name=\"businessName\"\r\n                  value={formData.businessName}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-[#800020] focus:border-transparent\"\r\n                  placeholder=\"Your Restaurant or Wine Shop\"\r\n                />\r\n              </div>\r\n              \r\n              <div>\r\n                <label htmlFor=\"adminName\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Administrator Name *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"adminName\"\r\n                  name=\"adminName\"\r\n                  value={formData.adminName}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-[#800020] focus:border-transparent\"\r\n                  placeholder=\"John Doe\"\r\n                />\r\n              </div>\r\n              \r\n              <div>\r\n                <label htmlFor=\"adminEmail\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Administrator Email *\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"adminEmail\"\r\n                  name=\"adminEmail\"\r\n                  value={formData.adminEmail}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                  disabled\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm bg-gray-50 text-gray-500\"\r\n                />\r\n                <p className=\"text-xs text-gray-500 mt-1\">This email was used for your subscription</p>\r\n              </div>\r\n              \r\n              <div>\r\n                <label htmlFor=\"adminPassword\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Administrator Password *\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"adminPassword\"\r\n                  name=\"adminPassword\"\r\n                  value={formData.adminPassword}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-[#800020] focus:border-transparent\"\r\n                  placeholder=\"Minimum 8 characters\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"md:col-span-2\">\r\n                <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Confirm Password *\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"confirmPassword\"\r\n                  name=\"confirmPassword\"\r\n                  value={formData.confirmPassword}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-[#800020] focus:border-transparent\"\r\n                  placeholder=\"Confirm your password\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </Card>\r\n\r\n          {/* Wine Club Tiers */}\r\n          <Card className=\"p-6\">\r\n            <div className=\"flex items-center justify-between mb-6\">\r\n              <h2 className=\"text-2xl font-bold text-gray-900\">Wine Club Membership Tiers</h2>\r\n              <Button type=\"button\" onClick={addTier} variant=\"secondary\" size=\"sm\">\r\n                <Plus className=\"w-4 h-4 mr-2\" />\r\n                Add Tier\r\n              </Button>\r\n            </div>\r\n            \r\n            <div className=\"space-y-4\">\r\n              {formData.tiers.map((tier, index) => (\r\n                <div key={index} className=\"border border-gray-200 rounded-lg p-4\">\r\n                  <div className=\"flex items-center justify-between mb-4\">\r\n                    <h3 className=\"text-lg font-medium text-gray-900\">Tier {index + 1}</h3>\r\n                    {formData.tiers.length > 1 && (\r\n                      <Button\r\n                        type=\"button\"\r\n                        onClick={() => removeTier(index)}\r\n                        variant=\"secondary\"\r\n                        size=\"sm\"\r\n                      >\r\n                        <Trash2 className=\"w-4 h-4\" />\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                  \r\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                        Tier Name *\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={tier.name}\r\n                        onChange={(e) => handleTierChange(index, 'name', e.target.value)}\r\n                        required\r\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-[#800020] focus:border-transparent\"\r\n                        placeholder=\"e.g., Silver, Gold, Platinum\"\r\n                      />\r\n                    </div>\r\n                    \r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                        Price Markup (%) *\r\n                      </label>\r\n                      <input\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                        value={tier.priceMarkupPercentage}\r\n                        onChange={(e) => handleTierChange(index, 'priceMarkupPercentage', parseFloat(e.target.value) || 0)}\r\n                        required\r\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-[#800020] focus:border-transparent\"\r\n                        placeholder=\"20\"\r\n                      />\r\n                    </div>\r\n                    \r\n                    <div className=\"md:col-span-1\">\r\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                        Description *\r\n                      </label>\r\n                      <textarea\r\n                        value={tier.description}\r\n                        onChange={(e) => handleTierChange(index, 'description', e.target.value)}\r\n                        required\r\n                        rows={2}\r\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-[#800020] focus:border-transparent\"\r\n                        placeholder=\"Describe this membership tier\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            \r\n            <div className=\"mt-4 p-4 bg-blue-50 border border-blue-200 rounded-md\">\r\n              <p className=\"text-sm text-blue-700\">\r\n                <strong>Price Markup:</strong> This percentage will be added to your wine inventory base prices for this tier. \r\n                For example, a wine with a base price of $20 and 25% markup will be offered to customers at $25.\r\n              </p>\r\n            </div>\r\n          </Card>\r\n\r\n          {/* Error Display */}\r\n          {error && (\r\n            <div className=\"p-4 bg-red-50 border border-red-200 rounded-md\">\r\n              <p className=\"text-sm text-red-600\">{error}</p>\r\n            </div>\r\n          )}\r\n\r\n          {/* Submit Button */}\r\n          <div className=\"text-center\">\r\n            <Button\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              className=\"px-8 py-3\"\r\n            >\r\n              {loading ? 'Creating Your Business...' : 'Complete Setup'}\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BusinessSetup;"],"names":["BusinessSetup","token","useParams","searchParams","useSearchParams","navigate","useNavigate","sessionId","formData","setFormData","useState","loading","setLoading","error","setError","verifyingPayment","setVerifyingPayment","useEffect","verifyPaymentAndLoadData","response","apiClient","inviteResponse","prev","err","handleInputChange","e","name","value","handleTierChange","index","field","tier","i","addTier","removeTier","_","validateForm","handleSubmit","jsxs","jsx","Card","Button","CheckCircle","Plus","Trash2"],"mappings":"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"}