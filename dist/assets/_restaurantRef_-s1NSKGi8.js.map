{"version":3,"file":"_restaurantRef_-s1NSKGi8.js","sources":["../../node_modules/lucide-react/dist/esm/icons/building-2.js","../../node_modules/lucide-react/dist/esm/icons/check-square.js","../../node_modules/lucide-react/dist/esm/icons/glass-water.js","../../node_modules/lucide-react/dist/esm/icons/trophy.js","../../src/services/restaurantService.ts","../../src/services/membershipService.ts","../../src/components/shared/LoadingStates.tsx","../../src/components/registration/RestaurantForm.tsx","../../src/components/registration/MembershipTierList.tsx","../../src/components/registration/RegistrationSteps.tsx","../../src/pages/onboarding/[restaurantRef].tsx"],"sourcesContent":["/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Building2 = createLucideIcon(\"Building2\", [\n  [\"path\", { d: \"M6 22V4a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v18Z\", key: \"1b4qmf\" }],\n  [\"path\", { d: \"M6 12H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h2\", key: \"i71pzd\" }],\n  [\"path\", { d: \"M18 9h2a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2h-2\", key: \"10jefs\" }],\n  [\"path\", { d: \"M10 6h4\", key: \"1itunk\" }],\n  [\"path\", { d: \"M10 10h4\", key: \"tcdvrf\" }],\n  [\"path\", { d: \"M10 14h4\", key: \"kelpxr\" }],\n  [\"path\", { d: \"M10 18h4\", key: \"1ulq68\" }]\n]);\n\nexport { Building2 as default };\n//# sourceMappingURL=building-2.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst CheckSquare = createLucideIcon(\"CheckSquare\", [\n  [\"path\", { d: \"m9 11 3 3L22 4\", key: \"1pflzl\" }],\n  [\"path\", { d: \"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11\", key: \"1jnkn4\" }]\n]);\n\nexport { CheckSquare as default };\n//# sourceMappingURL=check-square.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst GlassWater = createLucideIcon(\"GlassWater\", [\n  [\n    \"path\",\n    { d: \"M15.2 22H8.8a2 2 0 0 1-2-1.79L5 3h14l-1.81 17.21A2 2 0 0 1 15.2 22Z\", key: \"48rfw3\" }\n  ],\n  [\"path\", { d: \"M6 12a5 5 0 0 1 6 0 5 5 0 0 0 6 0\", key: \"mjntcy\" }]\n]);\n\nexport { GlassWater as default };\n//# sourceMappingURL=glass-water.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Trophy = createLucideIcon(\"Trophy\", [\n  [\"path\", { d: \"M6 9H4.5a2.5 2.5 0 0 1 0-5H6\", key: \"17hqa7\" }],\n  [\"path\", { d: \"M18 9h1.5a2.5 2.5 0 0 0 0-5H18\", key: \"lmptdp\" }],\n  [\"path\", { d: \"M4 22h16\", key: \"57wxv0\" }],\n  [\"path\", { d: \"M10 14.66V17c0 .55-.47.98-.97 1.21C7.85 18.75 7 20.24 7 22\", key: \"1nw9bq\" }],\n  [\"path\", { d: \"M14 14.66V17c0 .55.47.98.97 1.21C16.15 18.75 17 20.24 17 22\", key: \"1np0yb\" }],\n  [\"path\", { d: \"M18 2H6v7a6 6 0 0 0 12 0V2Z\", key: \"u46fv3\" }]\n]);\n\nexport { Trophy as default };\n//# sourceMappingURL=trophy.js.map\n","import { supabase } from '../supabase';\r\nimport type { Restaurant, RestaurantFormData, RestaurantInvitation } from '../types';\r\n\r\nexport const restaurantService = {\r\n  async createRestaurant(data: RestaurantFormData): Promise<Restaurant> {\r\n    // Create restaurant in Supabase\r\n    const { data: restaurant, error } = await supabase\r\n      .from('restaurants')\r\n      .insert([{\r\n        name: data.restaurantName,\r\n        website: data.website || '',\r\n        admin_email: data.email,\r\n        subscription_tier: data.tier || 'basic',\r\n        payment_session_id: data.sessionId || '',\r\n        created_at: new Date().toISOString(),\r\n      }])\r\n      .select()\r\n      .single();\r\n    \r\n    if (error) throw new Error(`Restaurant creation failed: ${error.message}`);\r\n    return restaurant;\r\n  },\r\n\r\n  async uploadLogo(restaurantId: string, logoFile: File): Promise<string> {\r\n    try {\r\n      // Get file extension\r\n      const fileExt = logoFile.name.split('.').pop();\r\n      const fileName = `${restaurantId}/logo.${fileExt}`;\r\n\r\n      // Upload to Supabase Storage\r\n      const { error: uploadError } = await supabase.storage\r\n        .from('restaurant-logos')\r\n        .upload(fileName, logoFile, {\r\n          cacheControl: '3600',\r\n          upsert: true\r\n        });\r\n\r\n      if (uploadError) throw uploadError;\r\n\r\n      // Get the public URL\r\n      const { data } = supabase.storage\r\n        .from('restaurant-logos')\r\n        .getPublicUrl(fileName);\r\n\r\n      // Update restaurant with logo URL\r\n      const { error: updateError } = await supabase\r\n        .from('restaurants')\r\n        .update({ logo_url: data.publicUrl })\r\n        .eq('id', restaurantId);\r\n\r\n      if (updateError) throw updateError;\r\n\r\n      return data.publicUrl;\r\n    } catch (error) {\r\n      console.error('Logo upload error:', error);\r\n      throw new Error('Failed to upload logo');\r\n    }\r\n  },\r\n  \r\n  async getRestaurantById(id: string): Promise<Restaurant> {\r\n    const { data, error } = await supabase\r\n      .from('restaurants')\r\n      .select('*')\r\n      .eq('id', id)\r\n      .single();\r\n    \r\n    if (error) throw new Error(`Failed to fetch restaurant: ${error.message}`);\r\n    if (!data) throw new Error('Restaurant not found');\r\n    \r\n    return data;\r\n  },\r\n  \r\n  async updateRestaurant(id: string, updateData: Partial<Restaurant>): Promise<Restaurant> {\r\n    const { data, error } = await supabase\r\n      .from('restaurants')\r\n      .update({\r\n        ...updateData,\r\n        updated_at: new Date().toISOString()\r\n      })\r\n      .eq('id', id)\r\n      .select()\r\n      .single();\r\n    \r\n    if (error) throw new Error(`Failed to update restaurant: ${error.message}`);\r\n    return data;\r\n  },\r\n\r\n  async createInvitation(email: string, restaurantName: string, website?: string, adminName?: string, tier: string = 'standard'): Promise<{ invitationUrl: string, token: string }> {\r\n    try {\r\n      // Check if email already has a pending invitation\r\n      const { data: existingInvitation } = await supabase\r\n        .from('restaurant_invitations')\r\n        .select('token')\r\n        .eq('email', email)\r\n        .eq('status', 'pending')\r\n        .maybeSingle();\r\n\r\n      if (existingInvitation) {\r\n        // Return the existing invitation link\r\n        const baseUrl = window.location.origin;\r\n        return {\r\n          token: existingInvitation.token,\r\n          invitationUrl: `${baseUrl}/onboarding/${existingInvitation.token}`\r\n        };\r\n      }\r\n\r\n      // Generate a secure token (using crypto API)\r\n      const token = crypto.randomUUID ? crypto.randomUUID() : Math.random().toString(36).substring(2);\r\n      \r\n      // Set expiration date (7 days)\r\n      const expiresAt = new Date();\r\n      expiresAt.setDate(expiresAt.getDate() + 7);\r\n\r\n      // Store in Supabase\r\n      const { data, error } = await supabase\r\n        .from('restaurant_invitations')\r\n        .insert([{\r\n          token,\r\n          email,\r\n          restaurant_name: restaurantName,\r\n          website: website || '',\r\n          admin_name: adminName || '',\r\n          tier,\r\n          created_at: new Date().toISOString(),\r\n          expires_at: expiresAt.toISOString(),\r\n          status: 'pending'\r\n        }])\r\n        .select()\r\n        .single();\r\n\r\n      if (error) throw new Error(`Failed to create invitation: ${error.message}`);\r\n\r\n      // Generate invitation URL\r\n      const baseUrl = window.location.origin;\r\n      const invitationUrl = `${baseUrl}/onboarding/${token}`;\r\n\r\n      return { token, invitationUrl };\r\n    } catch (error) {\r\n      console.error('Error creating invitation:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async getInvitationByToken(token: string): Promise<RestaurantInvitation | null> {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('restaurant_invitations')\r\n        .select('*')\r\n        .eq('token', token)\r\n        .single();\r\n\r\n      if (error) {\r\n        console.error('Error fetching invitation:', error);\r\n        return null;\r\n      }\r\n\r\n      // Check if invitation has expired\r\n      const now = new Date();\r\n      const expiryDate = new Date(data.expires_at);\r\n\r\n      if (now > expiryDate && data.status === 'pending') {\r\n        // Update the status to expired\r\n        await supabase\r\n          .from('restaurant_invitations')\r\n          .update({ status: 'expired' })\r\n          .eq('id', data.id);\r\n\r\n        return { ...data, status: 'expired' };\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error checking invitation:', error);\r\n      return null;\r\n    }\r\n  },\r\n\r\n  async updateInvitationStatus(token: string, status: 'accepted' | 'paid' | 'completed' | 'expired', restaurantId?: string): Promise<void> {\r\n    try {\r\n      const updateData: any = {\r\n        status,\r\n        updated_at: new Date().toISOString()\r\n      };\r\n\r\n      if (restaurantId) {\r\n        updateData.restaurant_id = restaurantId;\r\n      }\r\n\r\n      const { error } = await supabase\r\n        .from('restaurant_invitations')\r\n        .update(updateData)\r\n        .eq('token', token);\r\n\r\n      if (error) throw new Error(`Failed to update invitation status: ${error.message}`);\r\n    } catch (error) {\r\n      console.error('Error updating invitation status:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};","import { supabase } from '../supabase';\r\nimport { stripeService } from './stripeService';\r\nimport type { MembershipTier } from '../types';\r\n\r\nexport const membershipService = {\r\n  async createMembershipTier(\r\n    tierData: Omit<MembershipTier, 'id'>, \r\n    restaurantId: string\r\n  ): Promise<MembershipTier> {\r\n    try {\r\n      // If we already have stripe IDs (reconnecting scenario), use them\r\n      if (tierData.stripe_product_id && tierData.stripe_price_id) {\r\n        const { data, error } = await supabase\r\n          .from('membership_tiers')\r\n          .insert([{\r\n            name: tierData.name,\r\n            price: tierData.price,\r\n            description: tierData.description || '',\r\n            restaurant_id: restaurantId,\r\n            stripe_product_id: tierData.stripe_product_id,\r\n            stripe_price_id: tierData.stripe_price_id,\r\n            created_at: new Date().toISOString(),\r\n          }])\r\n          .select()\r\n          .single();\r\n          \r\n        if (error) throw new Error(`Tier creation failed: ${error.message}`);\r\n        return data;\r\n      }\r\n\r\n      // Otherwise create new Stripe product & price via API\r\n      const response = await fetch('/api/membership-tiers', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          name: tierData.name,\r\n          price: tierData.price,\r\n          description: tierData.description || '',\r\n          restaurant_id: restaurantId,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Failed to create membership tier');\r\n      }\r\n\r\n      const createdTier = await response.json();\r\n      return createdTier;\r\n    } catch (error: any) {\r\n      console.error('Error creating membership tier:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  async updateMembershipTier(tierData: MembershipTier): Promise<MembershipTier> {\r\n    try {\r\n      // Update through API to ensure Stripe syncing\r\n      const response = await fetch('/api/membership-tiers', {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(tierData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Failed to update membership tier');\r\n      }\r\n\r\n      const updatedTier = await response.json();\r\n      return updatedTier;\r\n    } catch (error: any) {\r\n      console.error('Error updating membership tier:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  async getMembershipTiersByRestaurant(restaurantId: string): Promise<MembershipTier[]> {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('membership_tiers')\r\n        .select('*')\r\n        .eq('restaurant_id', restaurantId)\r\n        .order('price', { ascending: true });\r\n      \r\n      if (error) throw new Error(`Failed to fetch tiers: ${error.message}`);\r\n      return data || [];\r\n    } catch (error: any) {\r\n      console.error('Error fetching membership tiers:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  async getMembershipTierById(tierId: string): Promise<MembershipTier> {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('membership_tiers')\r\n        .select('*')\r\n        .eq('id', tierId)\r\n        .single();\r\n      \r\n      if (error) throw new Error(`Failed to fetch tier: ${error.message}`);\r\n      return data;\r\n    } catch (error: any) {\r\n      console.error('Error fetching membership tier:', error);\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n","import React from 'react';\r\n\r\ninterface SpinnerProps {\r\n  size?: 'sm' | 'md' | 'lg';\r\n  color?: string;\r\n  className?: string;\r\n}\r\n\r\nexport const LoadingSpinner: React.FC<SpinnerProps> = ({\r\n  size = 'md',\r\n  color = 'border-[#872657]',\r\n  className = '',\r\n}) => {\r\n  const sizeClass = {\r\n    sm: 'h-5 w-5 border-2',\r\n    md: 'h-8 w-8 border-2',\r\n    lg: 'h-12 w-12 border-3',\r\n  }[size];\r\n\r\n  return (\r\n    <div\r\n      className={`animate-spin rounded-full ${sizeClass} border-b-${color} ${className}`}\r\n      role=\"status\"\r\n      aria-label=\"Loading\"\r\n    ></div>\r\n  );\r\n};\r\n\r\ninterface LoadingOverlayProps {\r\n  message?: string;\r\n  isFullScreen?: boolean;\r\n}\r\n\r\nexport const LoadingOverlay: React.FC<LoadingOverlayProps> = ({ \r\n  message = 'Loading...', \r\n  isFullScreen = false \r\n}) => {\r\n  return (\r\n    <div\r\n      className={`flex flex-col items-center justify-center bg-white bg-opacity-80 z-50 ${isFullScreen ? 'fixed inset-0' : 'absolute inset-0'}`}\r\n    >\r\n      <LoadingSpinner size=\"lg\" />\r\n      {message && <p className=\"mt-4 text-gray-700 font-medium\">{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface ErrorDisplayProps {\r\n  message: string;\r\n  onRetry?: () => void;\r\n  className?: string;\r\n}\r\n\r\nexport const ErrorDisplay: React.FC<ErrorDisplayProps> = ({ \r\n  message, \r\n  onRetry, \r\n  className = '' \r\n}) => {\r\n  return (\r\n    <div className={`p-4 bg-red-50 border border-red-200 rounded-md text-red-800 ${className}`}>\r\n      <p className=\"mb-2\">{message}</p>\r\n      {onRetry && (\r\n        <button\r\n          onClick={onRetry}\r\n          className=\"px-4 py-2 bg-red-700 text-white rounded hover:bg-red-800 transition-colors\"\r\n        >\r\n          Try Again\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface SuccessMessageProps {\r\n  message: string;\r\n  className?: string;\r\n}\r\n\r\nexport const SuccessMessage: React.FC<SuccessMessageProps> = ({ message, className = '' }) => {\r\n  return (\r\n    <div className={`p-4 bg-green-50 border border-green-200 rounded-md text-green-800 ${className}`}>\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Upload } from 'lucide-react';\r\nimport type { RestaurantFormData, FormErrors } from '../../types';\r\nimport { LoadingSpinner } from '../shared/LoadingStates';\r\n\r\ninterface RestaurantFormProps {\r\n  initialData: RestaurantFormData;\r\n  onSubmit: (data: RestaurantFormData) => void;\r\n  isSubmitting?: boolean;\r\n  errors?: FormErrors;\r\n  sessionId?: string;\r\n}\r\n\r\nconst RestaurantForm: React.FC<RestaurantFormProps> = ({\r\n  initialData,\r\n  onSubmit,\r\n  isSubmitting = false,\r\n  errors = {},\r\n  sessionId,\r\n}) => {\r\n  const [formData, setFormData] = useState<RestaurantFormData>(initialData);\r\n  const [localErrors, setLocalErrors] = useState<FormErrors>({});\r\n\r\n  // Reset form when initialData changes\r\n  useEffect(() => {\r\n    setFormData(initialData);\r\n  }, [initialData]);\r\n\r\n  // Merge external errors into local state\r\n  useEffect(() => {\r\n    setLocalErrors(errors);\r\n  }, [errors]);\r\n\r\n  // Validate email format\r\n  const validateEmail = (email: string): boolean => {\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  // Validate password strength\r\n  const validatePassword = (password: string): string[] => {\r\n    const issues = [];\r\n    if (password.length < 8) {\r\n      issues.push('at least 8 characters');\r\n    }\r\n    if (!/[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+/.test(password)) {\r\n      issues.push('at least one special character');\r\n    }\r\n    if (!/\\d/.test(password)) {\r\n      issues.push('at least one number');\r\n    }\r\n    if (!/[A-Z]/.test(password)) {\r\n      issues.push('at least one uppercase letter');\r\n    }\r\n    return issues;\r\n  };\r\n\r\n  // Real-time validation on change\r\n  const validateField = (name: string, value: string): string | undefined => {\r\n    let error: string | undefined = undefined;\r\n\r\n    switch (name) {\r\n      case 'email':\r\n        if (value && !validateEmail(value)) {\r\n          error = 'Please enter a valid email address';\r\n        }\r\n        break;\r\n      case 'password':\r\n        if (value) {\r\n          const issues = validatePassword(value);\r\n          if (issues.length > 0) {\r\n            error = `Password must contain ${issues.join(', ')}`;\r\n          }\r\n        }\r\n        break;\r\n      case 'confirmPassword':\r\n        if (value !== formData.password) {\r\n          error = 'Passwords do not match';\r\n        }\r\n        break;\r\n    }\r\n\r\n    return error;\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n\r\n    // Clear any existing error when the field is edited\r\n    if (localErrors[name as keyof FormErrors]) {\r\n      setLocalErrors((prev) => ({ ...prev, [name]: undefined }));\r\n    }\r\n\r\n    // Run real-time validation\r\n    const validationError = validateField(name, value);\r\n    if (validationError) {\r\n      setLocalErrors((prev) => ({ ...prev, [name]: validationError }));\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (!file) return;\r\n\r\n    const ALLOWED_TYPES = ['image/jpeg', 'image/png', 'image/webp'];\r\n    const MAX_SIZE = 5 * 1024 * 1024; // 5MB\r\n\r\n    if (!ALLOWED_TYPES.includes(file.type)) {\r\n      setLocalErrors({ general: 'Only JPG, PNG, and WEBP images are allowed' });\r\n      return;\r\n    }\r\n\r\n    if (file.size > MAX_SIZE) {\r\n      setLocalErrors({ general: 'File size must be less than 5MB' });\r\n      return;\r\n    }\r\n\r\n    setFormData({ ...formData, logo: file });\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    // Final validation before submission\r\n    let isValid = true;\r\n    const newErrors: FormErrors = {};\r\n\r\n    // Required fields\r\n    if (!formData.restaurantName.trim()) {\r\n      newErrors.restaurantName = 'Restaurant name is required';\r\n      isValid = false;\r\n    }\r\n    \r\n    if (!formData.adminName.trim()) {\r\n      newErrors.adminName = 'Admin name is required';\r\n      isValid = false;\r\n    }\r\n    \r\n    if (!formData.email.trim()) {\r\n      newErrors.email = 'Email is required';\r\n      isValid = false;\r\n    } else if (!validateEmail(formData.email)) {\r\n      newErrors.email = 'Please enter a valid email address';\r\n      isValid = false;\r\n    }\r\n    \r\n    if (!formData.password) {\r\n      newErrors.password = 'Password is required';\r\n      isValid = false;\r\n    } else {\r\n      const passwordIssues = validatePassword(formData.password);\r\n      if (passwordIssues.length > 0) {\r\n        newErrors.password = `Password must contain ${passwordIssues.join(', ')}`;\r\n        isValid = false;\r\n      }\r\n    }\r\n    \r\n    if (formData.password !== formData.confirmPassword) {\r\n      newErrors.confirmPassword = 'Passwords do not match';\r\n      isValid = false;\r\n    }\r\n\r\n    setLocalErrors(newErrors);\r\n\r\n    // Submit if valid\r\n    if (isValid) {\r\n      // Include sessionId in submission if provided\r\n      onSubmit({ ...formData, sessionId });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-8 md:space-y-10\">\r\n      {/* General error message */}\r\n      {localErrors.general && (\r\n        <div className=\"p-4 bg-red-100 text-red-700 rounded-md border border-red-200\">\r\n          {localErrors.general}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"space-y-6 md:space-y-8\">\r\n        {/* Restaurant Name */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Restaurant Name *\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"restaurantName\"\r\n            value={formData.restaurantName}\r\n            onChange={handleInputChange}\r\n            required\r\n            className={`w-full px-4 py-2 border ${localErrors.restaurantName ? 'border-red-500' : 'border-gray-300'} rounded-md focus:ring-2 focus:ring-[#872657]`}\r\n          />\r\n          {localErrors.restaurantName && (\r\n            <p className=\"mt-1 text-sm text-red-500\">{localErrors.restaurantName}</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Admin Name */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Admin Name *\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"adminName\"\r\n            value={formData.adminName}\r\n            onChange={handleInputChange}\r\n            required\r\n            placeholder=\"Your full name\"\r\n            className={`w-full px-4 py-2 border ${localErrors.adminName ? 'border-red-500' : 'border-gray-300'} rounded-md focus:ring-2 focus:ring-[#872657]`}\r\n          />\r\n          {localErrors.adminName && (\r\n            <p className=\"mt-1 text-sm text-red-500\">{localErrors.adminName}</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Email */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Email *\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleInputChange}\r\n            required\r\n            placeholder=\"admin@yourrestaurant.com\"\r\n            className={`w-full px-4 py-2 border ${localErrors.email ? 'border-red-500' : 'border-gray-300'} rounded-md focus:ring-2 focus:ring-[#872657]`}\r\n          />\r\n          {localErrors.email && (\r\n            <p className=\"mt-1 text-sm text-red-500\">{localErrors.email}</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Website */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Website\r\n          </label>\r\n          <input\r\n            type=\"url\"\r\n            name=\"website\"\r\n            value={formData.website || ''}\r\n            onChange={handleInputChange}\r\n            placeholder=\"https://www.yourrestaurant.com\"\r\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-[#872657]\"\r\n          />\r\n        </div>\r\n\r\n        {/* Logo Upload */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Logo\r\n          </label>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <label className=\"cursor-pointer bg-[#2A3D45] text-white px-4 py-2 rounded-md hover:bg-opacity-90\">\r\n              <Upload className=\"inline-block w-5 h-5 mr-2\" />\r\n              Upload Logo\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                className=\"hidden\"\r\n                onChange={handleFileChange}\r\n              />\r\n            </label>\r\n            {formData.logo && (\r\n              <span className=\"text-sm text-gray-600\">\r\n                File selected: {formData.logo.name}\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Password */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Password *\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleInputChange}\r\n            required\r\n            placeholder=\"At least 8 characters\"\r\n            className={`w-full px-4 py-2 border ${localErrors.password ? 'border-red-500' : 'border-gray-300'} rounded-md focus:ring-2 focus:ring-[#872657]`}\r\n          />\r\n          {localErrors.password && (\r\n            <p className=\"mt-1 text-sm text-red-500\">{localErrors.password}</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Confirm Password */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Confirm Password *\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={formData.confirmPassword}\r\n            onChange={handleInputChange}\r\n            required\r\n            placeholder=\"Confirm your password\"\r\n            className={`w-full px-4 py-2 border ${localErrors.confirmPassword ? 'border-red-500' : 'border-gray-300'} rounded-md focus:ring-2 focus:ring-[#872657]`}\r\n          />\r\n          {localErrors.confirmPassword && (\r\n            <p className=\"mt-1 text-sm text-red-500\">{localErrors.confirmPassword}</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Submit Button */}\r\n      <button\r\n        type=\"submit\"\r\n        disabled={isSubmitting}\r\n        className={`w-full md:w-auto md:px-12 mt-8 bg-[#872657] text-white py-4 rounded-md hover:bg-opacity-90 font-bold text-lg flex items-center justify-center ${isSubmitting ? 'opacity-70 cursor-not-allowed' : ''}`}\r\n      >\r\n        {isSubmitting ? (\r\n          <>\r\n            <LoadingSpinner size=\"sm\" className=\"mr-2\" />\r\n            Processing...\r\n          </>\r\n        ) : (\r\n          'Continue'\r\n        )}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RestaurantForm;\r\n","import React, { useState } from 'react';\r\nimport { Plus, Edit, Trash2, Wine, Tag, Star, Trophy, Grape, GlassWater } from 'lucide-react';\r\nimport type { MembershipTier } from '../../types';\r\nimport MembershipTierModal from '../membership-tier-modal';\r\n\r\ninterface MembershipTierListProps {\r\n  tiers: MembershipTier[];\r\n  restaurantId?: string;\r\n  onTierAdded: (tier: MembershipTier) => void;\r\n  onTierUpdated: (tier: MembershipTier) => void;\r\n  onTierDeleted: (tierId: string) => void;\r\n  minTiersRequired?: number;\r\n  error?: string;\r\n}\r\n\r\n// Predefined tier colors and icons for visual variety\r\nconst tierIcons = [\r\n  { icon: <Wine className=\"w-6 h-6\" />, color: \"#800020\" },\r\n  { icon: <Trophy className=\"w-6 h-6\" />, color: \"#AA7F39\" },\r\n  { icon: <Star className=\"w-6 h-6\" />, color: \"#2F4858\" },\r\n  { icon: <Grape className=\"w-6 h-6\" />, color: \"#5E2750\" },\r\n  { icon: <GlassWater className=\"w-6 h-6\" />, color: \"#2A3D45\" }\r\n];\r\n\r\nconst MembershipTierList: React.FC<MembershipTierListProps> = ({\r\n  tiers,\r\n  restaurantId,\r\n  onTierAdded,\r\n  onTierUpdated,\r\n  onTierDeleted,\r\n  minTiersRequired = 1,\r\n  error,\r\n}) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [currentTier, setCurrentTier] = useState<MembershipTier>({\r\n    id: '',\r\n    name: '',\r\n    price: '',\r\n    description: '',\r\n  });\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const openAddModal = () => {\r\n    setCurrentTier({\r\n      id: '',\r\n      name: '',\r\n      price: '',\r\n      description: '',\r\n    });\r\n    setIsEditing(false);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const openEditModal = (tier: MembershipTier) => {\r\n    setCurrentTier(tier);\r\n    setIsEditing(true);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleSave = (tier: MembershipTier) => {\r\n    if (isEditing) {\r\n      onTierUpdated(tier);\r\n    } else {\r\n      onTierAdded(tier);\r\n    }\r\n    setShowModal(false);\r\n  };\r\n\r\n  const confirmDelete = (tier: MembershipTier) => {\r\n    // Check if we can safely delete this tier\r\n    if (tiers.length <= minTiersRequired) {\r\n      if (confirm(`You must have at least ${minTiersRequired} membership tier(s). Replace this tier with a new one?`)) {\r\n        // Open modal to create a replacement tier\r\n        setCurrentTier({\r\n          id: '',\r\n          name: '',\r\n          price: '',\r\n          description: '',\r\n        });\r\n        setIsEditing(false);\r\n        setShowModal(true);\r\n        // Delete will happen after a new tier is added\r\n      }\r\n    } else if (confirm(`Are you sure you want to delete the \"${tier.name}\" tier?`)) {\r\n      onTierDeleted(tier.id);\r\n    }\r\n  };\r\n\r\n  // Get a tier icon and color based on index or default\r\n  const getTierStyle = (index: number) => {\r\n    return index < tierIcons.length ? tierIcons[index] : tierIcons[0];\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <h2 className=\"text-2xl font-bold mb-4 text-[#800020]\" style={{ fontFamily: 'HV Florentino' }}>\r\n        Membership Tiers\r\n      </h2>\r\n\r\n      <p className=\"mb-6 text-gray-700\" style={{ fontFamily: 'Libre Baskerville' }}>\r\n        Define 1-3 membership tiers that your guests can subscribe to.\r\n        Each tier should have a unique name, price, and description of benefits.\r\n      </p>\r\n\r\n      {error && (\r\n        <div className=\"p-4 bg-red-100 text-red-700 rounded-xl border border-red-200 mb-6\">\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      {/* List of tiers - Bento Box style */}\r\n      {tiers.length > 0 ? (\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {tiers.map((tier, index) => {\r\n            const tierStyle = getTierStyle(index);\r\n            \r\n            return (\r\n              <div\r\n                key={tier.id}\r\n                className=\"bg-white rounded-xl shadow-md overflow-hidden border border-gray-100 hover:shadow-lg transition-all duration-300\"\r\n                style={{ minHeight: '220px' }}\r\n              >\r\n                {/* Header with icon */}\r\n                <div \r\n                  className=\"p-4 text-white flex justify-between items-center\"\r\n                  style={{ backgroundColor: tierStyle.color }}\r\n                >\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"w-10 h-10 rounded-full bg-white bg-opacity-20 flex items-center justify-center mr-3\">\r\n                      {tierStyle.icon}\r\n                    </div>\r\n                    <h3 className=\"font-bold text-xl\" style={{ fontFamily: 'HV Florentino' }}>{tier.name}</h3>\r\n                  </div>\r\n                  <div className=\"flex space-x-2\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => openEditModal(tier)}\r\n                      className=\"p-1.5 bg-white bg-opacity-20 rounded-full hover:bg-opacity-30 transition-all duration-200\"\r\n                      aria-label={`Edit ${tier.name}`}\r\n                    >\r\n                      <Edit className=\"w-4 h-4 text-white\" />\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => confirmDelete(tier)}\r\n                      className=\"p-1.5 bg-white bg-opacity-20 rounded-full hover:bg-opacity-30 transition-all duration-200\"\r\n                      aria-label={`Delete ${tier.name}`}\r\n                    >\r\n                      <Trash2 className=\"w-4 h-4 text-white\" />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Price tag */}\r\n                <div className=\"px-4 py-3 bg-gray-50 border-b border-gray-100\">\r\n                  <div className=\"flex items-center\">\r\n                    <Tag className=\"w-4 h-4 text-gray-500 mr-2\" />\r\n                    <span className=\"text-2xl font-bold text-gray-800\" style={{ fontFamily: 'TayBasal' }}>\r\n                      ${parseFloat(tier.price).toFixed(2)}\r\n                    </span>\r\n                    <span className=\"text-gray-500 ml-1\" style={{ fontFamily: 'TayBasal' }}>/month</span>\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Description */}\r\n                <div className=\"p-4\">\r\n                  <p className=\"text-gray-700 text-sm\" style={{ fontFamily: 'Libre Baskerville' }}>\r\n                    {tier.description || \"No description provided.\"}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n          \r\n          {/* Add new tier card */}\r\n          {tiers.length < 3 && (\r\n            <div \r\n              onClick={openAddModal}\r\n              className=\"bg-white rounded-xl border-2 border-dashed border-gray-300 flex flex-col items-center justify-center p-6 cursor-pointer hover:border-[#800020] hover:bg-gray-50 transition-all duration-300\"\r\n              style={{ minHeight: '220px' }}\r\n            >\r\n              <div className=\"w-16 h-16 rounded-full bg-gray-100 flex items-center justify-center mb-4\">\r\n                <Plus className=\"w-8 h-8 text-gray-400\" />\r\n              </div>\r\n              <p className=\"text-gray-500 font-medium text-center\" style={{ fontFamily: 'TayBasal' }}>Add Another Tier</p>\r\n              <p className=\"text-xs text-gray-400 text-center mt-1\" style={{ fontFamily: 'Libre Baskerville' }}>\r\n                {tiers.length === 0 ? 'Add your first membership tier' : 'You can add up to 3 tiers'}\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div \r\n          onClick={openAddModal}\r\n          className=\"bg-white rounded-xl border-2 border-dashed border-gray-300 flex flex-col items-center justify-center p-12 cursor-pointer hover:border-[#800020] hover:bg-gray-50 transition-all duration-300\"\r\n        >\r\n          <div className=\"w-20 h-20 rounded-full bg-gray-100 flex items-center justify-center mb-6\">\r\n            <Plus className=\"w-10 h-10 text-gray-400\" />\r\n          </div>\r\n          <h3 className=\"text-xl font-medium text-gray-700 mb-2\" style={{ fontFamily: 'HV Florentino' }}>Create Your First Tier</h3>\r\n          <p className=\"text-gray-500 text-center max-w-md\" style={{ fontFamily: 'Libre Baskerville' }}>\r\n            Define at least one membership tier with a name, price, and description\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal */}\r\n      <MembershipTierModal\r\n        isOpen={showModal}\r\n        onClose={() => setShowModal(false)}\r\n        onSave={handleSave}\r\n        initialData={currentTier}\r\n        isEditing={isEditing}\r\n        restaurantId={restaurantId}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MembershipTierList;","import React, { useState } from 'react';\r\nimport RestaurantForm from './RestaurantForm';\r\nimport MembershipTierList from './MembershipTierList';\r\nimport { CheckCircle, Loader2, Building2, CreditCard, CheckSquare, Wine } from 'lucide-react';\r\nimport { LoadingSpinner } from '../shared/LoadingStates';\r\nimport type { RestaurantFormData, MembershipTier, FormErrors } from '../../types';\r\n\r\ninterface RegistrationStepsProps {\r\n  initialStep?: number;\r\n  initialRestaurantData?: RestaurantFormData;\r\n  initialTiers?: MembershipTier[];\r\n  onComplete: (data: {\r\n    restaurant: RestaurantFormData;\r\n    tiers: MembershipTier[];\r\n    restaurantId?: string;\r\n  }) => void;\r\n  isSubmitting?: boolean;\r\n  sessionId?: string;\r\n  errors?: {\r\n    restaurant?: FormErrors;\r\n    tiers?: string;\r\n    general?: string;\r\n  };\r\n  restaurantId?: string;\r\n}\r\n\r\nconst RegistrationSteps: React.FC<RegistrationStepsProps> = ({\r\n  initialStep = 1,\r\n  initialRestaurantData = {\r\n    restaurantName: '',\r\n    adminName: '',\r\n    email: '',\r\n    website: '',\r\n    logo: null,\r\n    password: '',\r\n    confirmPassword: '',\r\n  },\r\n  initialTiers = [],\r\n  onComplete,\r\n  isSubmitting = false,\r\n  sessionId,\r\n  errors = {},\r\n  restaurantId,\r\n}) => {\r\n  const [currentStep, setCurrentStep] = useState(initialStep);\r\n  const [restaurantData, setRestaurantData] = useState<RestaurantFormData>(initialRestaurantData);\r\n  const [membershipTiers, setMembershipTiers] = useState<MembershipTier[]>(initialTiers);\r\n\r\n  // Handle restaurant form submission\r\n  const handleRestaurantSubmit = (data: RestaurantFormData) => {\r\n    setRestaurantData(data);\r\n    setCurrentStep(2);\r\n  };\r\n\r\n  // Handle membership tier operations\r\n  const handleTierAdded = (tier: MembershipTier) => {\r\n    setMembershipTiers([...membershipTiers, tier]);\r\n  };\r\n\r\n  const handleTierUpdated = (updatedTier: MembershipTier) => {\r\n    setMembershipTiers(membershipTiers.map(tier => \r\n      tier.id === updatedTier.id ? updatedTier : tier\r\n    ));\r\n  };\r\n\r\n  const handleTierDeleted = (tierId: string) => {\r\n    setMembershipTiers(membershipTiers.filter(tier => tier.id !== tierId));\r\n  };\r\n\r\n  // Submit final registration\r\n  const handleFinalSubmit = () => {\r\n    // Validate requirements before submission\r\n    if (membershipTiers.length === 0) {\r\n      // Display error - at least one tier required\r\n      return;\r\n    }\r\n\r\n    onComplete({\r\n      restaurant: restaurantData,\r\n      tiers: membershipTiers,\r\n      restaurantId,\r\n    });\r\n  };\r\n\r\n  // Render progress steps UI\r\n  const renderProgressSteps = () => (\r\n    <div className=\"mb-10\">\r\n      <div className=\"flex items-center justify-between max-w-4xl mx-auto\">\r\n        <div className={`flex flex-col items-center ${currentStep >= 1 ? 'text-[#872657]' : 'text-gray-400'}`}>\r\n          <div\r\n            className={`w-12 h-12 rounded-full flex items-center justify-center border-2 transition-all duration-300 ${currentStep >= 1 ? 'border-[#872657] bg-[#872657] text-white' : 'border-gray-300 text-gray-400'}`}\r\n          >\r\n            {currentStep > 1 ? <CheckCircle className=\"w-6 h-6\" /> : <Building2 className=\"w-6 h-6\" />}\r\n          </div>\r\n          <span className=\"mt-2 text-sm font-medium\" style={{ fontFamily: 'TayBasal' }}>Restaurant Info</span>\r\n        </div>\r\n        <div className={`flex-1 h-0.5 mx-4 transition-all duration-300 ${currentStep >= 2 ? 'bg-[#872657]' : 'bg-gray-300'}`}></div>\r\n        <div className={`flex flex-col items-center ${currentStep >= 2 ? 'text-[#872657]' : 'text-gray-400'}`}>\r\n          <div\r\n            className={`w-12 h-12 rounded-full flex items-center justify-center border-2 transition-all duration-300 ${currentStep >= 2 ? 'border-[#872657] bg-[#872657] text-white' : 'border-gray-300 text-gray-400'}`}\r\n          >\r\n            {currentStep > 2 ? <CheckCircle className=\"w-6 h-6\" /> : <Wine className=\"w-6 h-6\" />}\r\n          </div>\r\n          <span className=\"mt-2 text-sm font-medium\" style={{ fontFamily: 'TayBasal' }}>Membership Tiers</span>\r\n        </div>\r\n        <div className={`flex-1 h-0.5 mx-4 transition-all duration-300 ${currentStep >= 3 ? 'bg-[#872657]' : 'bg-gray-300'}`}></div>\r\n        <div className={`flex flex-col items-center ${currentStep >= 3 ? 'text-[#872657]' : 'text-gray-400'}`}>\r\n          <div\r\n            className={`w-12 h-12 rounded-full flex items-center justify-center border-2 transition-all duration-300 ${currentStep >= 3 ? 'border-[#872657] bg-[#872657] text-white' : 'border-gray-300 text-gray-400'}`}\r\n          >\r\n            <CheckSquare className=\"w-6 h-6\" />\r\n          </div>\r\n          <span className=\"mt-2 text-sm font-medium\" style={{ fontFamily: 'TayBasal' }}>Review & Submit</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // Render step content based on current step\r\n  let stepContent;\r\n  \r\n  switch (currentStep) {\r\n    case 1:\r\n      stepContent = (\r\n        <div className=\"bg-white p-6 md:p-10 rounded-2xl shadow-lg border border-gray-200 transition-all duration-300 transform max-w-3xl md:max-w-4xl mx-auto\">\r\n          <h2 className=\"text-2xl font-bold mb-6 text-[#872657]\" style={{ fontFamily: 'HV Florentino' }}>\r\n            Restaurant Details\r\n          </h2>\r\n          <RestaurantForm\r\n            initialData={restaurantData}\r\n            onSubmit={handleRestaurantSubmit}\r\n            errors={errors?.restaurant}\r\n            sessionId={sessionId}\r\n          />\r\n        </div>\r\n      );\r\n      break;\r\n\r\n    case 2:\r\n      stepContent = (\r\n        <div className=\"bg-white p-6 md:p-10 rounded-2xl shadow-lg border border-gray-200 transition-all duration-300 transform max-w-3xl md:max-w-4xl mx-auto\">\r\n          <MembershipTierList\r\n            tiers={membershipTiers}\r\n            restaurantId={restaurantId}\r\n            onTierAdded={handleTierAdded}\r\n            onTierUpdated={handleTierUpdated}\r\n            onTierDeleted={handleTierDeleted}\r\n            error={errors?.tiers}\r\n          />\r\n          <div className=\"mt-10 flex flex-col sm:flex-row gap-4 sm:gap-6\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => setCurrentStep(1)}\r\n              className=\"flex-1 py-3 px-6 bg-gray-100 text-gray-800 rounded-xl hover:bg-gray-200 transition-colors duration-300\"\r\n              style={{ fontFamily: 'TayBasal' }}\r\n            >\r\n              Back\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => setCurrentStep(3)}\r\n              disabled={membershipTiers.length === 0}\r\n              className={`flex-1 py-3 px-6 bg-[#800020] text-white rounded-xl hover:bg-opacity-90 font-bold transition-all duration-300 ${membershipTiers.length === 0 ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n              style={{ fontFamily: 'TayBasal' }}\r\n            >\r\n              Continue\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n      break;\r\n\r\n    case 3:\r\n      stepContent = (\r\n        <div className=\"bg-white p-6 md:p-10 rounded-2xl shadow-lg border border-gray-200 transition-all duration-300 transform max-w-3xl md:max-w-4xl mx-auto\">\r\n          <h2 className=\"text-2xl font-bold mb-6 text-[#800020]\" style={{ fontFamily: 'HV Florentino' }}>\r\n            Review Your Registration\r\n          </h2>\r\n\r\n          {errors?.general && (\r\n            <div className=\"mb-6 p-4 bg-red-100 text-red-700 rounded-xl border border-red-200\">\r\n              {errors.general}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"mb-12 space-y-10\">\r\n            <div className=\"bg-gray-50 rounded-xl p-6 md:p-8 shadow-sm border border-gray-100\">\r\n              <h3 className=\"text-lg font-semibold mb-4 flex items-center text-[#800020]\" style={{ fontFamily: 'HV Florentino' }}>\r\n                <div className=\"w-8 h-8 rounded-full bg-[#800020] text-white flex items-center justify-center mr-3 text-sm\">\r\n                  <Building2 className=\"w-4 h-4\" />\r\n                </div>\r\n                Restaurant Information\r\n              </h3>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n                <div className=\"bg-white p-4 rounded-lg shadow-sm\">\r\n                  <p className=\"text-sm text-gray-600 mb-1\" style={{ fontFamily: 'TayBasal' }}>Restaurant Name</p>\r\n                  <p className=\"font-medium\" style={{ fontFamily: 'Libre Baskerville' }}>{restaurantData.restaurantName}</p>\r\n                </div>\r\n                <div className=\"bg-white p-4 rounded-lg shadow-sm\">\r\n                  <p className=\"text-sm text-gray-600 mb-1\" style={{ fontFamily: 'TayBasal' }}>Admin Name</p>\r\n                  <p className=\"font-medium\" style={{ fontFamily: 'Libre Baskerville' }}>{restaurantData.adminName}</p>\r\n                </div>\r\n                <div className=\"bg-white p-4 rounded-lg shadow-sm\">\r\n                  <p className=\"text-sm text-gray-600 mb-1\" style={{ fontFamily: 'TayBasal' }}>Email</p>\r\n                  <p className=\"font-medium\" style={{ fontFamily: 'Libre Baskerville' }}>{restaurantData.email}</p>\r\n                </div>\r\n                {restaurantData.website && (\r\n                  <div className=\"bg-white p-4 rounded-lg shadow-sm\">\r\n                    <p className=\"text-sm text-gray-600 mb-1\" style={{ fontFamily: 'TayBasal' }}>Website</p>\r\n                    <p className=\"font-medium\" style={{ fontFamily: 'Libre Baskerville' }}>{restaurantData.website}</p>\r\n                  </div>\r\n                )}\r\n                {restaurantData.logo && (\r\n                  <div className=\"col-span-2 bg-white p-4 rounded-lg shadow-sm\">\r\n                    <p className=\"text-sm text-gray-600 mb-1\" style={{ fontFamily: 'TayBasal' }}>Logo</p>\r\n                    <div className=\"flex items-center\">\r\n                      <div className=\"w-12 h-12 bg-gray-200 rounded-md flex items-center justify-center mr-3\">\r\n                        <img \r\n                          src={URL.createObjectURL(restaurantData.logo)} \r\n                          alt=\"Logo Preview\" \r\n                          className=\"max-w-full max-h-full object-contain rounded-md\"\r\n                        />\r\n                      </div>\r\n                      <p className=\"font-medium\" style={{ fontFamily: 'Libre Baskerville' }}>{restaurantData.logo.name}</p>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-gray-50 rounded-xl p-6 md:p-8 shadow-sm border border-gray-100\">\r\n              <h3 className=\"text-lg font-semibold mb-4 flex items-center text-[#800020]\" style={{ fontFamily: 'HV Florentino' }}>\r\n                <div className=\"w-8 h-8 rounded-full bg-[#800020] text-white flex items-center justify-center mr-3 text-sm\">\r\n                  <Wine className=\"w-4 h-4\" />\r\n                </div>\r\n                Membership Tiers\r\n              </h3>\r\n              \r\n              {membershipTiers.length > 0 ? (\r\n                <div className=\"space-y-4\">\r\n                  {membershipTiers.map((tier, index) => (\r\n                    <div key={tier.id} className=\"p-5 bg-white rounded-xl shadow-sm border border-gray-100 hover:shadow-md transition-shadow duration-300\">\r\n                      <div className=\"flex justify-between items-center\">\r\n                        <div>\r\n                          <p className=\"font-semibold text-[#800020] text-lg\" style={{ fontFamily: 'HV Florentino' }}>{tier.name}</p>\r\n                          <p className=\"text-gray-800 font-bold text-xl mt-1\" style={{ fontFamily: 'TayBasal' }}>\r\n                            ${parseFloat(tier.price).toFixed(2)}/month\r\n                          </p>\r\n                          <p className=\"text-sm text-gray-600 mt-2\" style={{ fontFamily: 'Libre Baskerville' }}>{tier.description}</p>\r\n                        </div>\r\n                        <div className=\"w-12 h-12 rounded-full bg-[#800020] bg-opacity-10 flex items-center justify-center\">\r\n                          <Wine className=\"w-6 h-6 text-[#800020]\" />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <p className=\"text-red-500 p-4 bg-red-50 rounded-lg border border-red-100\" style={{ fontFamily: 'Libre Baskerville' }}>\r\n                  No membership tiers added. Please go back and add at least one tier.\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex flex-col sm:flex-row gap-4 sm:gap-6\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => setCurrentStep(2)}\r\n              className=\"flex-1 py-3 px-6 bg-gray-100 text-gray-800 rounded-xl hover:bg-gray-200 transition-colors duration-300\"\r\n              style={{ fontFamily: 'TayBasal' }}\r\n            >\r\n              Back\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleFinalSubmit}\r\n              disabled={isSubmitting || membershipTiers.length === 0}\r\n              className={`flex-1 py-3 px-6 bg-[#800020] text-white rounded-xl hover:bg-opacity-90 font-bold transition-all duration-300 ${(isSubmitting || membershipTiers.length === 0) ? 'opacity-70 cursor-not-allowed' : ''}`}\r\n              style={{ fontFamily: 'TayBasal' }}\r\n            >\r\n              {isSubmitting ? (\r\n                <div className=\"flex items-center justify-center\">\r\n                  <LoadingSpinner size=\"sm\" className=\"mr-2\" />\r\n                  Processing...\r\n                </div>\r\n              ) : (\r\n                'Complete Registration'\r\n              )}\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"mt-6 text-center\">\r\n            <p className=\"text-xs text-gray-500\" style={{ fontFamily: 'Libre Baskerville' }}>\r\n              By completing registration, you agree to Club Cuvee's <a href=\"/terms\" className=\"text-[#800020] hover:underline\">Terms of Service</a> and <a href=\"/privacy\" className=\"text-[#800020] hover:underline\">Privacy Policy</a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      );\r\n      break;\r\n      \r\n    default:\r\n      stepContent = null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center min-h-screen bg-[#fdfaf7] dark:bg-black py-12 px-4 md:px-6 lg:px-8\">\r\n      <div className=\"max-w-3xl md:max-w-4xl lg:max-w-5xl w-full mx-auto\">\r\n        {renderProgressSteps()}\r\n        <div className=\"transition-all duration-500 ease-in-out transform\">\r\n          {stepContent}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationSteps;","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\r\nimport { Loader2, CheckCircle, Wine } from 'lucide-react';\r\nimport { supabase } from '../../supabase';\r\nimport { restaurantService } from '../../services/restaurantService';\r\nimport { membershipService } from '../../services/membershipService';\r\nimport RegistrationSteps from '../../components/registration/RegistrationSteps';\r\nimport AuthLayout from '../../components/AuthLayout';\r\nimport type { RestaurantFormData, MembershipTier, FormErrors } from '../../types';\r\n\r\n/**\r\n * Restaurant Onboarding Page\r\n * \r\n * This component is part of the restaurant registration flow, accessed via:\r\n * 1. A secure token URL from an email invitation\r\n * 2. Direct navigation to /onboarding/[token]\r\n * \r\n * The page guides restaurants through the onboarding process:\r\n * - Validating the invitation token\r\n * - Collecting restaurant/admin information\r\n * - Creating membership tiers\r\n * - Setting up Stripe integration\r\n * - Completing registration\r\n */\r\nconst RestaurantOnboarding: React.FC = () => {\r\n  const { restaurantRef } = useParams<{ restaurantRef: string }>();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const queryParams = new URLSearchParams(location.search);\r\n  \r\n  // Possible URL params for Stripe checkout return\r\n  const sessionId = queryParams.get('session_id');\r\n  const paymentStatus = queryParams.get('status');\r\n\r\n  // State for each step of the registration process\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [registrationComplete, setRegistrationComplete] = useState(false);\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [errors, setErrors] = useState<{\r\n    restaurant?: FormErrors;\r\n    tiers?: string;\r\n    general?: string;\r\n  }>({});\r\n\r\n  // Data state\r\n  const [restaurantData, setRestaurantData] = useState<RestaurantFormData>({\r\n    restaurantName: '',\r\n    adminName: '',\r\n    email: '',\r\n    website: '',\r\n    logo: null,\r\n    password: '',\r\n    confirmPassword: '',\r\n  });\r\n  const [tiers, setTiers] = useState<MembershipTier[]>([]);\r\n  const [restaurantId, setRestaurantId] = useState<string>('');\r\n  \r\n  // For handling Stripe payment verification - defaults to true for simplicity in this version\r\n  // In a full implementation, you might want to verify payment status with Stripe\r\n  const [paymentVerified, setPaymentVerified] = useState(true);\r\n\r\n  // Check for existing registration or validate invitation token\r\n  useEffect(() => {\r\n    const checkRegistrationStatus = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        \r\n        // If we have a sessionId and status=success from Stripe redirect\r\n        if (sessionId && paymentStatus === 'success') {\r\n          setPaymentVerified(true);\r\n        }\r\n        \r\n        // If we have a restaurant reference token, try to load data\r\n        if (restaurantRef) {\r\n          // First check if it's an invitation token\r\n          const invitation = await restaurantService.getInvitationByToken(restaurantRef);\r\n          \r\n          if (invitation) {\r\n            // If invitation is expired, show error\r\n            if (invitation.status === 'expired') {\r\n              setErrors({\r\n                general: 'This invitation link has expired. Please request a new invitation.'\r\n              });\r\n              setIsLoading(false);\r\n              return;\r\n            }\r\n            \r\n            // Pre-fill data from invitation\r\n            setRestaurantData({\r\n              restaurantName: invitation.restaurant_name,\r\n              adminName: invitation.admin_name || '',\r\n              email: invitation.email,\r\n              website: invitation.website || '',\r\n              password: '',\r\n              confirmPassword: '',\r\n              tier: invitation.tier,\r\n              invitationToken: invitation.token\r\n            });\r\n            \r\n            // If invitation has payment verified, set payment verified\r\n            if (invitation.status === 'paid' || invitation.payment_session_id) {\r\n              setPaymentVerified(true);\r\n            }\r\n            \r\n            // If invitation already has a restaurant ID, set it and skip to membership tiers\r\n            if (invitation.restaurant_id) {\r\n              setRestaurantId(invitation.restaurant_id);\r\n              setCurrentStep(2); // Skip to membership tiers step\r\n              \r\n              // Also fetch existing tiers\r\n              try {\r\n                const { data: existingTiers, error: tiersError } = await supabase\r\n                  .from('membership_tiers')\r\n                  .select('*')\r\n                  .eq('restaurant_id', invitation.restaurant_id);\r\n                  \r\n                if (!tiersError && existingTiers && existingTiers.length > 0) {\r\n                  setTiers(existingTiers);\r\n                }\r\n              } catch (err) {\r\n                console.error('Error fetching existing tiers:', err);\r\n              }\r\n            }\r\n            \r\n            // Mark invitation as accepted if it's still pending\r\n            if (invitation.status === 'pending') {\r\n              await restaurantService.updateInvitationStatus(invitation.token, 'accepted');\r\n            }\r\n          } else {\r\n            // Invalid token\r\n            setErrors({\r\n              general: 'Invalid invitation token. Please check your invitation email or contact support.'\r\n            });\r\n          }\r\n        } else {\r\n          // No token provided\r\n          setErrors({\r\n            general: 'No invitation token provided. Please use the link from your invitation email.'\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('Error checking registration status:', error);\r\n        setErrors({\r\n          general: 'Error loading registration data. Please try again or contact support.'\r\n        });\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    checkRegistrationStatus();\r\n  }, [restaurantRef, sessionId, paymentStatus]);\r\n\r\n  // Handle restaurant form submission (Step 1)\r\n  const handleRestaurantSubmit = async (data: RestaurantFormData) => {\r\n    setIsSubmitting(true);\r\n    setErrors({});\r\n    \r\n    try {\r\n      // Create the restaurant account\r\n      const createdRestaurant = await restaurantService.createRestaurant({\r\n        ...data,\r\n        tier: data.tier || 'standard', // Use specified tier or default\r\n      });\r\n      \r\n      setRestaurantId(createdRestaurant.id);\r\n      \r\n      // If a logo was provided, upload it\r\n      if (data.logo) {\r\n        await restaurantService.uploadLogo(createdRestaurant.id, data.logo);\r\n      }\r\n      \r\n      // Store updated restaurant data\r\n      setRestaurantData(data);\r\n      \r\n      // Handle invitation token if present\r\n      if (data.invitationToken) {\r\n        await restaurantService.updateInvitationStatus(\r\n          data.invitationToken, \r\n          'accepted', \r\n          createdRestaurant.id\r\n        );\r\n      }\r\n      \r\n      // Proceed to next step\r\n      setCurrentStep(2);\r\n    } catch (error: any) {\r\n      console.error('Error creating restaurant:', error);\r\n      setErrors({\r\n        restaurant: {\r\n          general: error.message || 'Failed to create restaurant account'\r\n        }\r\n      });\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n  \r\n  // Handle completion of all steps\r\n  const handleRegistrationComplete = async (data: {\r\n    restaurant: RestaurantFormData;\r\n    tiers: MembershipTier[];\r\n    restaurantId?: string;\r\n  }) => {\r\n    setIsSubmitting(true);\r\n    setErrors({});\r\n    \r\n    try {\r\n      // Ensure we have a restaurant ID\r\n      const finalRestaurantId = data.restaurantId || restaurantId;\r\n      if (!finalRestaurantId) {\r\n        throw new Error('Missing restaurant ID');\r\n      }\r\n      \r\n      // Create any membership tiers that don't have IDs yet\r\n      const tierPromises = data.tiers.map(async (tier) => {\r\n        // Skip tiers that are already created (have an ID and stripe IDs)\r\n        if (\r\n          tier.id &&\r\n          tier.stripe_product_id &&\r\n          tier.stripe_price_id &&\r\n          tier.restaurant_id === finalRestaurantId\r\n        ) {\r\n          return tier;\r\n        }\r\n        \r\n        // Otherwise create the tier\r\n        return await membershipService.createMembershipTier(\r\n          {\r\n            name: tier.name,\r\n            price: tier.price,\r\n            description: tier.description,\r\n            stripe_product_id: tier.stripe_product_id,\r\n            stripe_price_id: tier.stripe_price_id,\r\n          },\r\n          finalRestaurantId\r\n        );\r\n      });\r\n      \r\n      // Wait for all tier creations to complete\r\n      await Promise.all(tierPromises);\r\n      \r\n      // Update restaurant to mark registration complete\r\n      await restaurantService.updateRestaurant(finalRestaurantId, {\r\n        registration_complete: true,\r\n        updated_at: new Date().toISOString(),\r\n      });\r\n      \r\n      // If invitation token exists, update status to completed\r\n      if (restaurantData.invitationToken) {\r\n        await restaurantService.updateInvitationStatus(\r\n          restaurantData.invitationToken,\r\n          'completed',\r\n          finalRestaurantId\r\n        );\r\n      }\r\n      \r\n      // Create user authentication and link to restaurant\r\n      const { error } = await supabase.auth.signUp({\r\n        email: data.restaurant.email,\r\n        password: data.restaurant.password,\r\n        options: {\r\n          data: {\r\n            restaurant_id: finalRestaurantId,\r\n            full_name: data.restaurant.adminName,\r\n            role: 'restaurant_admin',\r\n          }\r\n        }\r\n      });\r\n      \r\n      if (error) {\r\n        console.error('Error creating user account:', error);\r\n        // Don't fail the process - we can handle this separately\r\n      }\r\n      \r\n      // Registration is complete!\r\n      setRegistrationComplete(true);\r\n      \r\n    } catch (error: any) {\r\n      console.error('Error completing registration:', error);\r\n      setErrors({\r\n        general: error.message || 'Failed to complete registration'\r\n      });\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Loading state\r\n  if (isLoading) {\r\n    return (\r\n      <AuthLayout>\r\n        <div className=\"min-h-screen flex items-center justify-center py-16 px-4 md:px-6 lg:px-8\">\r\n          <div className=\"text-center max-w-lg mx-auto\">\r\n            <Loader2 className=\"h-12 w-12 animate-spin text-[#872657] mx-auto mb-6\" />\r\n            <p className=\"text-gray-600 text-lg\">Loading your restaurant registration...</p>\r\n          </div>\r\n        </div>\r\n      </AuthLayout>\r\n    );\r\n  }\r\n  \r\n  // Registration complete state\r\n  if (registrationComplete) {\r\n    return (\r\n      <AuthLayout>\r\n        <div className=\"min-h-screen flex items-center justify-center py-16 px-4 md:px-6 lg:px-8\">\r\n          <div className=\"max-w-xl w-full p-8 md:p-10 bg-white rounded-xl shadow-lg text-center\">\r\n            <div className=\"mb-6 p-4 bg-green-100 rounded-full inline-flex items-center justify-center\">\r\n              <CheckCircle className=\"w-16 h-16 text-green-500\" />\r\n            </div>\r\n            <h1 className=\"text-3xl font-bold mb-4 text-[#872657]\">You're All Set!</h1>\r\n            <p className=\"mb-8 text-gray-700\">\r\n              Your restaurant has been registered with Club Cuvee and your membership tiers are ready.\r\n              You can now access your dashboard to manage your wine club.\r\n            </p>\r\n            <div className=\"flex flex-col sm:flex-row sm:justify-center space-y-3 sm:space-y-0 sm:space-x-4\">\r\n              <button \r\n                onClick={() => navigate('/dashboard')} \r\n                className=\"w-full sm:w-auto sm:px-8 bg-[#872657] text-white py-3 rounded-md hover:bg-opacity-90 font-bold\"\r\n              >\r\n                Go to Dashboard\r\n              </button>\r\n              <button \r\n                onClick={() => navigate('/preview-wine-club')} \r\n                className=\"w-full sm:w-auto sm:px-8 bg-white border border-[#872657] text-[#872657] py-3 rounded-md hover:bg-gray-50 font-bold\"\r\n              >\r\n                Preview Your Wine Club\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </AuthLayout>\r\n    );\r\n  }\r\n  \r\n  // Error state - invalid or expired token\r\n  if (errors.general && !restaurantId) {\r\n    return (\r\n      <AuthLayout>\r\n        <div className=\"min-h-screen flex items-center justify-center py-16 px-4 md:px-6 lg:px-8\">\r\n          <div className=\"max-w-xl w-full p-8 md:p-10 bg-white rounded-xl shadow-lg text-center\">\r\n            <div className=\"mb-6 p-4 bg-red-100 rounded-full inline-flex items-center justify-center\">\r\n              <Wine className=\"w-16 h-16 text-red-500\" />\r\n            </div>\r\n            <h1 className=\"text-3xl font-bold mb-4 text-[#872657]\">Invitation Error</h1>\r\n            <p className=\"mb-4 text-gray-700\">\r\n              {errors.general}\r\n            </p>\r\n            <p className=\"text-sm text-gray-500 mb-8\">\r\n              Please check your email for a valid invitation or contact support for assistance.\r\n            </p>\r\n            <button \r\n              onClick={() => window.location.href = \"https://clubcuvee.com/contact\"} \r\n              className=\"w-full sm:w-auto sm:px-8 bg-[#872657] text-white py-3 rounded-md hover:bg-opacity-90 font-bold mx-auto\"\r\n            >\r\n              Contact Support\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </AuthLayout>\r\n    );\r\n  }\r\n\r\n  // Main registration UI\r\n  return (\r\n    <AuthLayout>\r\n      <div className=\"min-h-screen bg-gray-50 py-16 px-4 md:px-6 lg:px-8\">\r\n        <div className=\"max-w-6xl mx-auto\">\r\n          <div className=\"text-center mb-12 md:mb-16\">\r\n            <h1 className=\"text-4xl md:text-5xl font-bold text-[#872657] mb-4\">Welcome to Club Cuvee</h1>\r\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto px-4\">\r\n              Set up your custom wine club and start offering personalized wine memberships to your guests\r\n            </p>\r\n          </div>\r\n          \r\n          <RegistrationSteps\r\n            initialStep={currentStep}\r\n            initialRestaurantData={restaurantData}\r\n            initialTiers={tiers}\r\n            onComplete={handleRegistrationComplete}\r\n            isSubmitting={isSubmitting}\r\n            sessionId={sessionId || undefined}\r\n            errors={errors}\r\n            restaurantId={restaurantId}\r\n          />\r\n        </div>\r\n      </div>\r\n    </AuthLayout>\r\n  );\r\n};\r\n\r\nexport default RestaurantOnboarding;"],"names":["Building2","createLucideIcon","CheckSquare","GlassWater","Trophy","restaurantService","data","restaurant","error","supabase","restaurantId","logoFile","fileExt","fileName","uploadError","updateError","id","updateData","email","restaurantName","website","adminName","tier","existingInvitation","baseUrl","token","expiresAt","invitationUrl","now","expiryDate","status","membershipService","tierData","response","errorData","tierId","LoadingSpinner","size","color","className","sizeClass","jsx","RestaurantForm","initialData","onSubmit","isSubmitting","errors","sessionId","formData","setFormData","useState","localErrors","setLocalErrors","useEffect","validateEmail","validatePassword","password","issues","validateField","name","value","handleInputChange","e","prev","validationError","handleFileChange","file","ALLOWED_TYPES","MAX_SIZE","handleSubmit","isValid","newErrors","passwordIssues","jsxs","Upload","Fragment","tierIcons","Wine","Star","Grape","MembershipTierList","tiers","onTierAdded","onTierUpdated","onTierDeleted","minTiersRequired","showModal","setShowModal","currentTier","setCurrentTier","isEditing","setIsEditing","openAddModal","openEditModal","handleSave","confirmDelete","getTierStyle","index","tierStyle","Edit","Trash2","Tag","Plus","MembershipTierModal","RegistrationSteps","initialStep","initialRestaurantData","initialTiers","onComplete","currentStep","setCurrentStep","restaurantData","setRestaurantData","membershipTiers","setMembershipTiers","handleRestaurantSubmit","handleTierAdded","handleTierUpdated","updatedTier","handleTierDeleted","handleFinalSubmit","renderProgressSteps","CheckCircle","stepContent","RestaurantOnboarding","restaurantRef","useParams","navigate","useNavigate","location","useLocation","queryParams","paymentStatus","isLoading","setIsLoading","registrationComplete","setRegistrationComplete","setIsSubmitting","setErrors","setTiers","setRestaurantId","paymentVerified","setPaymentVerified","invitation","existingTiers","tiersError","err","handleRegistrationComplete","finalRestaurantId","tierPromises","AuthLayout","Loader2"],"mappings":"sKAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMA,EAAYC,EAAiB,YAAa,CAC9C,CAAC,OAAQ,CAAE,EAAG,4CAA6C,IAAK,QAAQ,CAAE,EAC1E,CAAC,OAAQ,CAAE,EAAG,0CAA2C,IAAK,QAAQ,CAAE,EACxE,CAAC,OAAQ,CAAE,EAAG,2CAA4C,IAAK,QAAQ,CAAE,EACzE,CAAC,OAAQ,CAAE,EAAG,UAAW,IAAK,QAAQ,CAAE,EACxC,CAAC,OAAQ,CAAE,EAAG,WAAY,IAAK,QAAQ,CAAE,EACzC,CAAC,OAAQ,CAAE,EAAG,WAAY,IAAK,QAAQ,CAAE,EACzC,CAAC,OAAQ,CAAE,EAAG,WAAY,IAAK,QAAU,CAAA,CAC3C,CAAC,ECjBD;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMC,EAAcD,EAAiB,cAAe,CAClD,CAAC,OAAQ,CAAE,EAAG,iBAAkB,IAAK,QAAQ,CAAE,EAC/C,CAAC,OAAQ,CAAE,EAAG,4DAA6D,IAAK,QAAU,CAAA,CAC5F,CAAC,ECZD;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAME,GAAaF,EAAiB,aAAc,CAChD,CACE,OACA,CAAE,EAAG,sEAAuE,IAAK,QAAQ,CAC1F,EACD,CAAC,OAAQ,CAAE,EAAG,oCAAqC,IAAK,QAAU,CAAA,CACpE,CAAC,ECfD;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMG,GAASH,EAAiB,SAAU,CACxC,CAAC,OAAQ,CAAE,EAAG,+BAAgC,IAAK,QAAQ,CAAE,EAC7D,CAAC,OAAQ,CAAE,EAAG,iCAAkC,IAAK,QAAQ,CAAE,EAC/D,CAAC,OAAQ,CAAE,EAAG,WAAY,IAAK,QAAQ,CAAE,EACzC,CAAC,OAAQ,CAAE,EAAG,6DAA8D,IAAK,QAAQ,CAAE,EAC3F,CAAC,OAAQ,CAAE,EAAG,8DAA+D,IAAK,QAAQ,CAAE,EAC5F,CAAC,OAAQ,CAAE,EAAG,8BAA+B,IAAK,QAAU,CAAA,CAC9D,CAAC,ECbYI,EAAoB,CAC/B,MAAM,iBAAiBC,EAA+C,CAE9D,KAAA,CAAE,KAAMC,EAAY,MAAAC,CAAM,EAAI,MAAMC,EACvC,KAAK,aAAa,EAClB,OAAO,CAAC,CACP,KAAMH,EAAK,eACX,QAASA,EAAK,SAAW,GACzB,YAAaA,EAAK,MAClB,kBAAmBA,EAAK,MAAQ,QAChC,mBAAoBA,EAAK,WAAa,GACtC,WAAY,IAAI,KAAK,EAAE,YAAY,CAAA,CACpC,CAAC,EACD,SACA,OAAO,EAEV,GAAIE,EAAa,MAAA,IAAI,MAAM,+BAA+BA,EAAM,OAAO,EAAE,EAClE,OAAAD,CACT,EAEA,MAAM,WAAWG,EAAsBC,EAAiC,CAClE,GAAA,CAEF,MAAMC,EAAUD,EAAS,KAAK,MAAM,GAAG,EAAE,IAAI,EACvCE,EAAW,GAAGH,CAAY,SAASE,CAAO,GAG1C,CAAE,MAAOE,CAAY,EAAI,MAAML,EAAS,QAC3C,KAAK,kBAAkB,EACvB,OAAOI,EAAUF,EAAU,CAC1B,aAAc,OACd,OAAQ,EAAA,CACT,EAEH,GAAIG,EAAmB,MAAAA,EAGjB,KAAA,CAAE,KAAAR,CAAS,EAAAG,EAAS,QACvB,KAAK,kBAAkB,EACvB,aAAaI,CAAQ,EAGlB,CAAE,MAAOE,CAAA,EAAgB,MAAMN,EAClC,KAAK,aAAa,EAClB,OAAO,CAAE,SAAUH,EAAK,SAAA,CAAW,EACnC,GAAG,KAAMI,CAAY,EAExB,GAAIK,EAAmB,MAAAA,EAEvB,OAAOT,EAAK,gBACLE,EAAO,CACN,cAAA,MAAM,qBAAsBA,CAAK,EACnC,IAAI,MAAM,uBAAuB,CAAA,CAE3C,EAEA,MAAM,kBAAkBQ,EAAiC,CACvD,KAAM,CAAE,KAAAV,EAAM,MAAAE,CAAA,EAAU,MAAMC,EAC3B,KAAK,aAAa,EAClB,OAAO,GAAG,EACV,GAAG,KAAMO,CAAE,EACX,OAAO,EAEV,GAAIR,EAAa,MAAA,IAAI,MAAM,+BAA+BA,EAAM,OAAO,EAAE,EACzE,GAAI,CAACF,EAAY,MAAA,IAAI,MAAM,sBAAsB,EAE1C,OAAAA,CACT,EAEA,MAAM,iBAAiBU,EAAYC,EAAsD,CACjF,KAAA,CAAE,KAAAX,EAAM,MAAAE,GAAU,MAAMC,EAC3B,KAAK,aAAa,EAClB,OAAO,CACN,GAAGQ,EACH,WAAY,IAAI,KAAK,EAAE,YAAY,CAAA,CACpC,EACA,GAAG,KAAMD,CAAE,EACX,SACA,OAAO,EAEV,GAAIR,EAAa,MAAA,IAAI,MAAM,gCAAgCA,EAAM,OAAO,EAAE,EACnE,OAAAF,CACT,EAEA,MAAM,iBAAiBY,EAAeC,EAAwBC,EAAkBC,EAAoBC,EAAe,WAA+D,CAC5K,GAAA,CAEI,KAAA,CAAE,KAAMC,CAAmB,EAAI,MAAMd,EACxC,KAAK,wBAAwB,EAC7B,OAAO,OAAO,EACd,GAAG,QAASS,CAAK,EACjB,GAAG,SAAU,SAAS,EACtB,YAAY,EAEf,GAAIK,EAAoB,CAEhBC,MAAAA,EAAU,OAAO,SAAS,OACzB,MAAA,CACL,MAAOD,EAAmB,MAC1B,cAAe,GAAGC,CAAO,eAAeD,EAAmB,KAAK,EAClE,CAAA,CAIF,MAAME,EAAQ,OAAO,WAAa,OAAO,WAAW,EAAI,KAAK,OAAS,EAAA,SAAS,EAAE,EAAE,UAAU,CAAC,EAGxFC,MAAgB,KACtBA,EAAU,QAAQA,EAAU,QAAQ,EAAI,CAAC,EAGnC,KAAA,CAAE,KAAApB,EAAM,MAAAE,GAAU,MAAMC,EAC3B,KAAK,wBAAwB,EAC7B,OAAO,CAAC,CACP,MAAAgB,EACA,MAAAP,EACA,gBAAiBC,EACjB,QAASC,GAAW,GACpB,WAAYC,GAAa,GACzB,KAAAC,EACA,WAAY,IAAI,KAAK,EAAE,YAAY,EACnC,WAAYI,EAAU,YAAY,EAClC,OAAQ,SAAA,CACT,CAAC,EACD,SACA,OAAO,EAEV,GAAIlB,EAAa,MAAA,IAAI,MAAM,gCAAgCA,EAAM,OAAO,EAAE,EAI1E,MAAMmB,EAAgB,GADN,OAAO,SAAS,MACA,eAAeF,CAAK,GAE7C,MAAA,CAAE,MAAAA,EAAO,cAAAE,CAAc,QACvBnB,EAAO,CACN,cAAA,MAAM,6BAA8BA,CAAK,EAC3CA,CAAA,CAEV,EAEA,MAAM,qBAAqBiB,EAAqD,CAC1E,GAAA,CACF,KAAM,CAAE,KAAAnB,EAAM,MAAAE,CAAA,EAAU,MAAMC,EAC3B,KAAK,wBAAwB,EAC7B,OAAO,GAAG,EACV,GAAG,QAASgB,CAAK,EACjB,OAAO,EAEV,GAAIjB,EACM,eAAA,MAAM,6BAA8BA,CAAK,EAC1C,KAIH,MAAAoB,MAAU,KACVC,EAAa,IAAI,KAAKvB,EAAK,UAAU,EAE3C,OAAIsB,EAAMC,GAAcvB,EAAK,SAAW,WAEtC,MAAMG,EACH,KAAK,wBAAwB,EAC7B,OAAO,CAAE,OAAQ,SAAA,CAAW,EAC5B,GAAG,KAAMH,EAAK,EAAE,EAEZ,CAAE,GAAGA,EAAM,OAAQ,SAAU,GAG/BA,QACAE,EAAO,CACN,eAAA,MAAM,6BAA8BA,CAAK,EAC1C,IAAA,CAEX,EAEA,MAAM,uBAAuBiB,EAAeK,EAAuDpB,EAAsC,CACnI,GAAA,CACF,MAAMO,EAAkB,CACtB,OAAAa,EACA,WAAY,IAAI,KAAK,EAAE,YAAY,CACrC,EAEIpB,IACFO,EAAW,cAAgBP,GAG7B,KAAM,CAAE,MAAAF,CAAA,EAAU,MAAMC,EACrB,KAAK,wBAAwB,EAC7B,OAAOQ,CAAU,EACjB,GAAG,QAASQ,CAAK,EAEpB,GAAIjB,EAAa,MAAA,IAAI,MAAM,uCAAuCA,EAAM,OAAO,EAAE,QAC1EA,EAAO,CACN,cAAA,MAAM,oCAAqCA,CAAK,EAClDA,CAAA,CACR,CAEJ,ECnMauB,GAAoB,CAC/B,MAAM,qBACJC,EACAtB,EACyB,CACrB,GAAA,CAEE,GAAAsB,EAAS,mBAAqBA,EAAS,gBAAiB,CACpD,KAAA,CAAE,KAAA1B,EAAM,MAAAE,GAAU,MAAMC,EAC3B,KAAK,kBAAkB,EACvB,OAAO,CAAC,CACP,KAAMuB,EAAS,KACf,MAAOA,EAAS,MAChB,YAAaA,EAAS,aAAe,GACrC,cAAetB,EACf,kBAAmBsB,EAAS,kBAC5B,gBAAiBA,EAAS,gBAC1B,WAAY,IAAI,KAAK,EAAE,YAAY,CAAA,CACpC,CAAC,EACD,SACA,OAAO,EAEV,GAAIxB,EAAa,MAAA,IAAI,MAAM,yBAAyBA,EAAM,OAAO,EAAE,EAC5D,OAAAF,CAAA,CAIH,MAAA2B,EAAW,MAAM,MAAM,wBAAyB,CACpD,OAAQ,OACR,QAAS,CAAE,eAAgB,kBAAmB,EAC9C,KAAM,KAAK,UAAU,CACnB,KAAMD,EAAS,KACf,MAAOA,EAAS,MAChB,YAAaA,EAAS,aAAe,GACrC,cAAetB,CAChB,CAAA,CAAA,CACF,EAEG,GAAA,CAACuB,EAAS,GAAI,CACV,MAAAC,EAAY,MAAMD,EAAS,KAAK,EACtC,MAAM,IAAI,MAAMC,EAAU,OAAS,kCAAkC,CAAA,CAIhE,OADa,MAAMD,EAAS,KAAK,QAEjCzB,EAAY,CACX,cAAA,MAAM,kCAAmCA,CAAK,EAChDA,CAAA,CAEV,EAEA,MAAM,qBAAqBwB,EAAmD,CACxE,GAAA,CAEI,MAAAC,EAAW,MAAM,MAAM,wBAAyB,CACpD,OAAQ,MACR,QAAS,CAAE,eAAgB,kBAAmB,EAC9C,KAAM,KAAK,UAAUD,CAAQ,CAAA,CAC9B,EAEG,GAAA,CAACC,EAAS,GAAI,CACV,MAAAC,EAAY,MAAMD,EAAS,KAAK,EACtC,MAAM,IAAI,MAAMC,EAAU,OAAS,kCAAkC,CAAA,CAIhE,OADa,MAAMD,EAAS,KAAK,QAEjCzB,EAAY,CACX,cAAA,MAAM,kCAAmCA,CAAK,EAChDA,CAAA,CAEV,EAEA,MAAM,+BAA+BE,EAAiD,CAChF,GAAA,CACI,KAAA,CAAE,KAAAJ,EAAM,MAAAE,GAAU,MAAMC,EAC3B,KAAK,kBAAkB,EACvB,OAAO,GAAG,EACV,GAAG,gBAAiBC,CAAY,EAChC,MAAM,QAAS,CAAE,UAAW,GAAM,EAErC,GAAIF,EAAa,MAAA,IAAI,MAAM,0BAA0BA,EAAM,OAAO,EAAE,EACpE,OAAOF,GAAQ,CAAC,QACTE,EAAY,CACX,cAAA,MAAM,mCAAoCA,CAAK,EACjDA,CAAA,CAEV,EAEA,MAAM,sBAAsB2B,EAAyC,CAC/D,GAAA,CACF,KAAM,CAAE,KAAA7B,EAAM,MAAAE,CAAA,EAAU,MAAMC,EAC3B,KAAK,kBAAkB,EACvB,OAAO,GAAG,EACV,GAAG,KAAM0B,CAAM,EACf,OAAO,EAEV,GAAI3B,EAAa,MAAA,IAAI,MAAM,yBAAyBA,EAAM,OAAO,EAAE,EAC5D,OAAAF,QACAE,EAAY,CACX,cAAA,MAAM,kCAAmCA,CAAK,EAChDA,CAAA,CACR,CAEJ,ECpGa4B,EAAyC,CAAC,CACrD,KAAAC,EAAO,KACP,MAAAC,EAAQ,mBACR,UAAAC,EAAY,EACd,IAAM,CACJ,MAAMC,EAAY,CAChB,GAAI,mBACJ,GAAI,mBACJ,GAAI,sBACJH,CAAI,EAGJ,OAAAI,EAAA,IAAC,MAAA,CACC,UAAW,6BAA6BD,CAAS,aAAaF,CAAK,IAAIC,CAAS,GAChF,KAAK,SACL,aAAW,SAAA,CACZ,CAEL,ECbMG,GAAgD,CAAC,CACrD,YAAAC,EACA,SAAAC,EACA,aAAAC,EAAe,GACf,OAAAC,EAAS,CAAC,EACV,UAAAC,CACF,IAAM,CACJ,KAAM,CAACC,EAAUC,CAAW,EAAIC,EAAAA,SAA6BP,CAAW,EAClE,CAACQ,EAAaC,CAAc,EAAIF,EAAAA,SAAqB,CAAA,CAAE,EAG7DG,EAAAA,UAAU,IAAM,CACdJ,EAAYN,CAAW,CAAA,EACtB,CAACA,CAAW,CAAC,EAGhBU,EAAAA,UAAU,IAAM,CACdD,EAAeN,CAAM,CAAA,EACpB,CAACA,CAAM,CAAC,EAGL,MAAAQ,EAAiBpC,GACF,mDACD,KAAKA,CAAK,EAIxBqC,EAAoBC,GAA+B,CACvD,MAAMC,EAAS,CAAC,EACZ,OAAAD,EAAS,OAAS,GACpBC,EAAO,KAAK,uBAAuB,EAEhC,yCAAyC,KAAKD,CAAQ,GACzDC,EAAO,KAAK,gCAAgC,EAEzC,KAAK,KAAKD,CAAQ,GACrBC,EAAO,KAAK,qBAAqB,EAE9B,QAAQ,KAAKD,CAAQ,GACxBC,EAAO,KAAK,+BAA+B,EAEtCA,CACT,EAGMC,EAAgB,CAACC,EAAcC,IAAsC,CACzE,IAAIpD,EAEJ,OAAQmD,EAAM,CACZ,IAAK,QACCC,GAAS,CAACN,EAAcM,CAAK,IACvBpD,EAAA,sCAEV,MACF,IAAK,WACH,GAAIoD,EAAO,CACH,MAAAH,EAASF,EAAiBK,CAAK,EACjCH,EAAO,OAAS,IAClBjD,EAAQ,yBAAyBiD,EAAO,KAAK,IAAI,CAAC,GACpD,CAEF,MACF,IAAK,kBACCG,IAAUZ,EAAS,WACbxC,EAAA,0BAEV,KAAA,CAGG,OAAAA,CACT,EAEMqD,EAAqBC,GAA2C,CACpE,KAAM,CAAE,KAAAH,EAAM,MAAAC,CAAM,EAAIE,EAAE,OACdb,EAACc,IAAU,CAAE,GAAGA,EAAM,CAACJ,CAAI,EAAGC,CAAA,EAAQ,EAG9CT,EAAYQ,CAAwB,GACvBP,EAACW,IAAU,CAAE,GAAGA,EAAM,CAACJ,CAAI,EAAG,MAAA,EAAY,EAIrD,MAAAK,EAAkBN,EAAcC,EAAMC,CAAK,EAC7CI,GACaZ,EAACW,IAAU,CAAE,GAAGA,EAAM,CAACJ,CAAI,EAAGK,CAAA,EAAkB,CAEnE,EAEMC,EAAoBH,GAA2C,CACnE,MAAMI,EAAOJ,EAAE,OAAO,QAAQ,CAAC,EAC/B,GAAI,CAACI,EAAM,OAEX,MAAMC,EAAgB,CAAC,aAAc,YAAa,YAAY,EACxDC,EAAW,EAAI,KAAO,KAE5B,GAAI,CAACD,EAAc,SAASD,EAAK,IAAI,EAAG,CACvBd,EAAA,CAAE,QAAS,6CAA8C,EACxE,MAAA,CAGE,GAAAc,EAAK,KAAOE,EAAU,CACThB,EAAA,CAAE,QAAS,kCAAmC,EAC7D,MAAA,CAGFH,EAAY,CAAE,GAAGD,EAAU,KAAMkB,EAAM,CACzC,EAEMG,EAAgBP,GAAuB,CAC3CA,EAAE,eAAe,EAGjB,IAAIQ,EAAU,GACd,MAAMC,EAAwB,CAAC,EAqB3B,GAlBCvB,EAAS,eAAe,SAC3BuB,EAAU,eAAiB,8BACjBD,EAAA,IAGPtB,EAAS,UAAU,SACtBuB,EAAU,UAAY,yBACZD,EAAA,IAGPtB,EAAS,MAAM,OAGRM,EAAcN,EAAS,KAAK,IACtCuB,EAAU,MAAQ,qCACRD,EAAA,KAJVC,EAAU,MAAQ,oBACRD,EAAA,IAMR,CAACtB,EAAS,SACZuB,EAAU,SAAW,uBACXD,EAAA,OACL,CACC,MAAAE,EAAiBjB,EAAiBP,EAAS,QAAQ,EACrDwB,EAAe,OAAS,IAC1BD,EAAU,SAAW,yBAAyBC,EAAe,KAAK,IAAI,CAAC,GAC7DF,EAAA,GACZ,CAGEtB,EAAS,WAAaA,EAAS,kBACjCuB,EAAU,gBAAkB,yBAClBD,EAAA,IAGZlB,EAAemB,CAAS,EAGpBD,GAEF1B,EAAS,CAAE,GAAGI,EAAU,UAAAD,EAAW,CAEvC,EAEA,OACG0B,EAAAA,KAAA,OAAA,CAAK,SAAUJ,EAAc,UAAU,0BAErC,SAAA,CAAAlB,EAAY,SACVV,EAAA,IAAA,MAAA,CAAI,UAAU,+DACZ,WAAY,QACf,EAGFgC,EAAAA,KAAC,MAAI,CAAA,UAAU,yBAEb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAChC,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,oBAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,iBACL,MAAOO,EAAS,eAChB,SAAUa,EACV,SAAQ,GACR,UAAW,2BAA2BV,EAAY,eAAiB,iBAAmB,iBAAiB,+CAAA,CACzG,EACCA,EAAY,gBACXV,EAAA,IAAC,KAAE,UAAU,4BAA6B,WAAY,cAAe,CAAA,CAAA,EAEzE,SAGC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,eAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,YACL,MAAOO,EAAS,UAChB,SAAUa,EACV,SAAQ,GACR,YAAY,iBACZ,UAAW,2BAA2BV,EAAY,UAAY,iBAAmB,iBAAiB,+CAAA,CACpG,EACCA,EAAY,WACXV,EAAA,IAAC,KAAE,UAAU,4BAA6B,WAAY,SAAU,CAAA,CAAA,EAEpE,SAGC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,UAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,QACL,KAAK,QACL,MAAOO,EAAS,MAChB,SAAUa,EACV,SAAQ,GACR,YAAY,2BACZ,UAAW,2BAA2BV,EAAY,MAAQ,iBAAmB,iBAAiB,+CAAA,CAChG,EACCA,EAAY,OACXV,EAAA,IAAC,KAAE,UAAU,4BAA6B,WAAY,KAAM,CAAA,CAAA,EAEhE,SAGC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,UAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,MACL,KAAK,UACL,MAAOO,EAAS,SAAW,GAC3B,SAAUa,EACV,YAAY,iCACZ,UAAU,sFAAA,CAAA,CACZ,EACF,SAGC,MACC,CAAA,SAAA,CAACpB,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,OAAA,EACAgC,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAACA,EAAAA,KAAA,QAAA,CAAM,UAAU,kFACf,SAAA,CAAChC,EAAAA,IAAAiC,EAAA,CAAO,UAAU,2BAA4B,CAAA,EAAE,cAEhDjC,EAAA,IAAC,QAAA,CACC,KAAK,OACL,OAAO,UACP,UAAU,SACV,SAAUwB,CAAA,CAAA,CACZ,EACF,EACCjB,EAAS,MACPyB,OAAA,OAAA,CAAK,UAAU,wBAAwB,SAAA,CAAA,kBACtBzB,EAAS,KAAK,IAAA,CAChC,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,SAGC,MACC,CAAA,SAAA,CAACP,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,aAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,WACL,KAAK,WACL,MAAOO,EAAS,SAChB,SAAUa,EACV,SAAQ,GACR,YAAY,wBACZ,UAAW,2BAA2BV,EAAY,SAAW,iBAAmB,iBAAiB,+CAAA,CACnG,EACCA,EAAY,UACXV,EAAA,IAAC,KAAE,UAAU,4BAA6B,WAAY,QAAS,CAAA,CAAA,EAEnE,SAGC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,QAAA,CAAM,UAAU,+CAA+C,SAEhE,qBAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,WACL,KAAK,kBACL,MAAOO,EAAS,gBAChB,SAAUa,EACV,SAAQ,GACR,YAAY,wBACZ,UAAW,2BAA2BV,EAAY,gBAAkB,iBAAmB,iBAAiB,+CAAA,CAC1G,EACCA,EAAY,iBACXV,EAAA,IAAC,KAAE,UAAU,4BAA6B,WAAY,eAAgB,CAAA,CAAA,CAE1E,CAAA,CAAA,EACF,EAGAA,EAAA,IAAC,SAAA,CACC,KAAK,SACL,SAAUI,EACV,UAAW,iJAAiJA,EAAe,gCAAkC,EAAE,GAE9M,WAEG4B,EAAAA,KAAAE,EAAA,SAAA,CAAA,SAAA,CAAAlC,EAAA,IAACL,EAAe,CAAA,KAAK,KAAK,UAAU,OAAO,EAAE,eAAA,CAAA,CAE/C,EAEA,UAAA,CAAA,CAEJ,EACF,CAEJ,EC7TMwC,EAAY,CAChB,CAAE,KAAOnC,EAAA,IAAAoC,EAAA,CAAK,UAAU,SAAU,CAAA,EAAI,MAAO,SAAU,EACvD,CAAE,KAAOpC,EAAA,IAAArC,GAAA,CAAO,UAAU,SAAU,CAAA,EAAI,MAAO,SAAU,EACzD,CAAE,KAAOqC,EAAA,IAAAqC,EAAA,CAAK,UAAU,SAAU,CAAA,EAAI,MAAO,SAAU,EACvD,CAAE,KAAOrC,EAAA,IAAAsC,EAAA,CAAM,UAAU,SAAU,CAAA,EAAI,MAAO,SAAU,EACxD,CAAE,KAAOtC,EAAA,IAAAtC,GAAA,CAAW,UAAU,SAAU,CAAA,EAAI,MAAO,SAAU,CAC/D,EAEM6E,GAAwD,CAAC,CAC7D,MAAAC,EACA,aAAAvE,EACA,YAAAwE,EACA,cAAAC,EACA,cAAAC,EACA,iBAAAC,EAAmB,EACnB,MAAA7E,CACF,IAAM,CACJ,KAAM,CAAC8E,EAAWC,CAAY,EAAIrC,EAAAA,SAAS,EAAK,EAC1C,CAACsC,EAAaC,CAAc,EAAIvC,WAAyB,CAC7D,GAAI,GACJ,KAAM,GACN,MAAO,GACP,YAAa,EAAA,CACd,EACK,CAACwC,EAAWC,CAAY,EAAIzC,EAAAA,SAAS,EAAK,EAE1C0C,EAAe,IAAM,CACVH,EAAA,CACb,GAAI,GACJ,KAAM,GACN,MAAO,GACP,YAAa,EAAA,CACd,EACDE,EAAa,EAAK,EAClBJ,EAAa,EAAI,CACnB,EAEMM,EAAiBvE,GAAyB,CAC9CmE,EAAenE,CAAI,EACnBqE,EAAa,EAAI,EACjBJ,EAAa,EAAI,CACnB,EAEMO,EAAcxE,GAAyB,CACvCoE,EACFP,EAAc7D,CAAI,EAElB4D,EAAY5D,CAAI,EAElBiE,EAAa,EAAK,CACpB,EAEMQ,EAAiBzE,GAAyB,CAE1C2D,EAAM,QAAUI,EACd,QAAQ,0BAA0BA,CAAgB,wDAAwD,IAE7FI,EAAA,CACb,GAAI,GACJ,KAAM,GACN,MAAO,GACP,YAAa,EAAA,CACd,EACDE,EAAa,EAAK,EAClBJ,EAAa,EAAI,GAGV,QAAQ,wCAAwCjE,EAAK,IAAI,SAAS,GAC3E8D,EAAc9D,EAAK,EAAE,CAEzB,EAGM0E,EAAgBC,GACbA,EAAQrB,EAAU,OAASA,EAAUqB,CAAK,EAAIrB,EAAU,CAAC,EAIhE,OAAAH,EAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAChC,EAAAA,IAAA,KAAA,CAAG,UAAU,yCAAyC,MAAO,CAAE,WAAY,eAAA,EAAmB,SAE/F,kBAAA,CAAA,EAEAA,EAAAA,IAAC,KAAE,UAAU,qBAAqB,MAAO,CAAE,WAAY,mBAAoB,EAAG,SAG9E,yIAAA,CAAA,EAECjC,GACCiC,EAAA,IAAC,MAAI,CAAA,UAAU,oEACZ,SACHjC,EAAA,EAIDyE,EAAM,OAAS,EACbR,EAAA,KAAA,MAAA,CAAI,UAAU,uDACZ,SAAA,CAAMQ,EAAA,IAAI,CAAC3D,EAAM2E,IAAU,CACpB,MAAAC,EAAYF,EAAaC,CAAK,EAGlC,OAAAxB,EAAA,KAAC,MAAA,CAEC,UAAU,mHACV,MAAO,CAAE,UAAW,OAAQ,EAG5B,SAAA,CAAAA,EAAA,KAAC,MAAA,CACC,UAAU,mDACV,MAAO,CAAE,gBAAiByB,EAAU,KAAM,EAE1C,SAAA,CAACzB,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAhC,EAAA,IAAC,MAAI,CAAA,UAAU,sFACZ,SAAAyD,EAAU,KACb,EACAzD,EAAAA,IAAC,KAAG,CAAA,UAAU,oBAAoB,MAAO,CAAE,WAAY,eAAoB,EAAA,SAAAnB,EAAK,IAAK,CAAA,CAAA,EACvF,EACAmD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAhC,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS,IAAMoD,EAAcvE,CAAI,EACjC,UAAU,4FACV,aAAY,QAAQA,EAAK,IAAI,GAE7B,SAAAmB,EAAAA,IAAC0D,EAAK,CAAA,UAAU,oBAAqB,CAAA,CAAA,CACvC,EACA1D,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS,IAAMsD,EAAczE,CAAI,EACjC,UAAU,4FACV,aAAY,UAAUA,EAAK,IAAI,GAE/B,SAAAmB,EAAAA,IAAC2D,EAAO,CAAA,UAAU,oBAAqB,CAAA,CAAA,CAAA,CACzC,CACF,CAAA,CAAA,CAAA,CACF,QAGC,MAAI,CAAA,UAAU,gDACb,SAAC3B,EAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAChC,EAAAA,IAAA4D,EAAA,CAAI,UAAU,4BAA6B,CAAA,EAC5C5B,OAAC,QAAK,UAAU,mCAAmC,MAAO,CAAE,WAAY,UAAc,EAAA,SAAA,CAAA,IAClF,WAAWnD,EAAK,KAAK,EAAE,QAAQ,CAAC,CAAA,EACpC,EACAmB,EAAAA,IAAC,QAAK,UAAU,qBAAqB,MAAO,CAAE,WAAY,UAAW,EAAG,SAAM,QAAA,CAAA,CAAA,CAAA,CAChF,CACF,CAAA,QAGC,MAAI,CAAA,UAAU,MACb,SAAAA,EAAA,IAAC,KAAE,UAAU,wBAAwB,MAAO,CAAE,WAAY,mBAAoB,EAC3E,SAAKnB,EAAA,aAAe,2BACvB,CACF,CAAA,CAAA,CAAA,EAnDKA,EAAK,EAoDZ,CAAA,CAEH,EAGA2D,EAAM,OAAS,GACdR,EAAA,KAAC,MAAA,CACC,QAASmB,EACT,UAAU,8LACV,MAAO,CAAE,UAAW,OAAQ,EAE5B,SAAA,CAAAnD,EAAAA,IAAC,OAAI,UAAU,2EACb,eAAC6D,EAAK,CAAA,UAAU,wBAAwB,CAC1C,CAAA,EACA7D,EAAAA,IAAC,KAAE,UAAU,wCAAwC,MAAO,CAAE,WAAY,UAAW,EAAG,SAAgB,kBAAA,CAAA,EACvGA,EAAA,IAAA,IAAA,CAAE,UAAU,yCAAyC,MAAO,CAAE,WAAY,mBAAA,EACxE,SAAAwC,EAAM,SAAW,EAAI,iCAAmC,2BAC3D,CAAA,CAAA,CAAA,CAAA,CACF,CAAA,CAEJ,EAEAR,EAAA,KAAC,MAAA,CACC,QAASmB,EACT,UAAU,+LAEV,SAAA,CAAAnD,EAAAA,IAAC,OAAI,UAAU,2EACb,eAAC6D,EAAK,CAAA,UAAU,0BAA0B,CAC5C,CAAA,EACA7D,EAAAA,IAAC,MAAG,UAAU,yCAAyC,MAAO,CAAE,WAAY,eAAgB,EAAG,SAAsB,wBAAA,CAAA,EACrHA,EAAAA,IAAC,KAAE,UAAU,qCAAqC,MAAO,CAAE,WAAY,mBAAoB,EAAG,SAE9F,yEAAA,CAAA,CAAA,CAAA,CACF,EAIFA,EAAA,IAAC8D,EAAA,CACC,OAAQjB,EACR,QAAS,IAAMC,EAAa,EAAK,EACjC,OAAQO,EACR,YAAaN,EACb,UAAAE,EACA,aAAAhF,CAAA,CAAA,CACF,EACF,CAEJ,EC/LM8F,GAAsD,CAAC,CAC3D,YAAAC,EAAc,EACd,sBAAAC,EAAwB,CACtB,eAAgB,GAChB,UAAW,GACX,MAAO,GACP,QAAS,GACT,KAAM,KACN,SAAU,GACV,gBAAiB,EACnB,EACA,aAAAC,EAAe,CAAC,EAChB,WAAAC,EACA,aAAA/D,EAAe,GACf,UAAAE,EACA,OAAAD,EAAS,CAAC,EACV,aAAApC,CACF,IAAM,CACJ,KAAM,CAACmG,EAAaC,CAAc,EAAI5D,EAAAA,SAASuD,CAAW,EACpD,CAACM,EAAgBC,CAAiB,EAAI9D,EAAAA,SAA6BwD,CAAqB,EACxF,CAACO,EAAiBC,CAAkB,EAAIhE,EAAAA,SAA2ByD,CAAY,EAG/EQ,EAA0B7G,GAA6B,CAC3D0G,EAAkB1G,CAAI,EACtBwG,EAAe,CAAC,CAClB,EAGMM,EAAmB9F,GAAyB,CAChD4F,EAAmB,CAAC,GAAGD,EAAiB3F,CAAI,CAAC,CAC/C,EAEM+F,EAAqBC,GAAgC,CACzDJ,EAAmBD,EAAgB,IACjC3F,GAAAA,EAAK,KAAOgG,EAAY,GAAKA,EAAchG,CAAA,CAC5C,CACH,EAEMiG,EAAqBpF,GAAmB,CAC5C+E,EAAmBD,EAAgB,OAAO3F,GAAQA,EAAK,KAAOa,CAAM,CAAC,CACvE,EAGMqF,EAAoB,IAAM,CAE1BP,EAAgB,SAAW,GAKpBL,EAAA,CACT,WAAYG,EACZ,MAAOE,EACP,aAAAvG,CAAA,CACD,CACH,EAGM+G,EAAsB,IACzBhF,EAAAA,IAAA,MAAA,CAAI,UAAU,QACb,SAAAgC,EAAA,KAAC,MAAI,CAAA,UAAU,sDACb,SAAA,CAAAA,EAAAA,KAAC,OAAI,UAAW,8BAA8BoC,GAAe,EAAI,iBAAmB,eAAe,GACjG,SAAA,CAAApE,EAAA,IAAC,MAAA,CACC,UAAW,gGAAgGoE,GAAe,EAAI,2CAA6C,+BAA+B,GAEzM,SAAAA,EAAc,EAAIpE,EAAA,IAACiF,EAAY,CAAA,UAAU,UAAU,EAAKjF,EAAA,IAACzC,EAAU,CAAA,UAAU,SAAU,CAAA,CAAA,CAC1F,EACAyC,EAAAA,IAAC,QAAK,UAAU,2BAA2B,MAAO,CAAE,WAAY,UAAW,EAAG,SAAe,iBAAA,CAAA,CAAA,EAC/F,EACAA,EAAAA,IAAC,OAAI,UAAW,iDAAiDoE,GAAe,EAAI,eAAiB,aAAa,GAAI,EACtHpC,EAAAA,KAAC,OAAI,UAAW,8BAA8BoC,GAAe,EAAI,iBAAmB,eAAe,GACjG,SAAA,CAAApE,EAAA,IAAC,MAAA,CACC,UAAW,gGAAgGoE,GAAe,EAAI,2CAA6C,+BAA+B,GAEzM,SAAAA,EAAc,EAAIpE,EAAA,IAACiF,EAAY,CAAA,UAAU,UAAU,EAAKjF,EAAA,IAACoC,EAAK,CAAA,UAAU,SAAU,CAAA,CAAA,CACrF,EACApC,EAAAA,IAAC,QAAK,UAAU,2BAA2B,MAAO,CAAE,WAAY,UAAW,EAAG,SAAgB,kBAAA,CAAA,CAAA,EAChG,EACAA,EAAAA,IAAC,OAAI,UAAW,iDAAiDoE,GAAe,EAAI,eAAiB,aAAa,GAAI,EACtHpC,EAAAA,KAAC,OAAI,UAAW,8BAA8BoC,GAAe,EAAI,iBAAmB,eAAe,GACjG,SAAA,CAAApE,EAAA,IAAC,MAAA,CACC,UAAW,gGAAgGoE,GAAe,EAAI,2CAA6C,+BAA+B,GAE1M,SAAApE,EAAAA,IAACvC,EAAY,CAAA,UAAU,SAAU,CAAA,CAAA,CACnC,EACAuC,EAAAA,IAAC,QAAK,UAAU,2BAA2B,MAAO,CAAE,WAAY,UAAW,EAAG,SAAe,iBAAA,CAAA,CAAA,CAC/F,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAIE,IAAAkF,EAEJ,OAAQd,EAAa,CACnB,IAAK,GAEDc,EAAAlD,EAAA,KAAC,MAAI,CAAA,UAAU,yIACb,SAAA,CAAChC,EAAAA,IAAA,KAAA,CAAG,UAAU,yCAAyC,MAAO,CAAE,WAAY,eAAA,EAAmB,SAE/F,oBAAA,CAAA,EACAA,EAAA,IAACC,GAAA,CACC,YAAaqE,EACb,SAAUI,EACV,OAAQrE,GAAQ,WAChB,UAAAC,CAAA,CAAA,CACF,EACF,EAEF,MAEF,IAAK,GAED4E,EAAAlD,EAAA,KAAC,MAAI,CAAA,UAAU,yIACb,SAAA,CAAAhC,EAAA,IAACuC,GAAA,CACC,MAAOiC,EACP,aAAAvG,EACA,YAAa0G,EACb,cAAeC,EACf,cAAeE,EACf,MAAOzE,GAAQ,KAAA,CACjB,EACA2B,EAAAA,KAAC,MAAI,CAAA,UAAU,iDACb,SAAA,CAAAhC,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS,IAAMqE,EAAe,CAAC,EAC/B,UAAU,yGACV,MAAO,CAAE,WAAY,UAAW,EACjC,SAAA,MAAA,CAED,EACArE,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS,IAAMqE,EAAe,CAAC,EAC/B,SAAUG,EAAgB,SAAW,EACrC,UAAW,iHAAiHA,EAAgB,SAAW,EAAI,gCAAkC,EAAE,GAC/L,MAAO,CAAE,WAAY,UAAW,EACjC,SAAA,UAAA,CAAA,CAED,CACF,CAAA,CAAA,EACF,EAEF,MAEF,IAAK,GAEDU,EAAAlD,EAAA,KAAC,MAAI,CAAA,UAAU,yIACb,SAAA,CAAChC,EAAAA,IAAA,KAAA,CAAG,UAAU,yCAAyC,MAAO,CAAE,WAAY,eAAA,EAAmB,SAE/F,0BAAA,CAAA,EAECK,GAAQ,SACPL,EAAA,IAAC,OAAI,UAAU,oEACZ,WAAO,QACV,EAGFgC,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oEACb,SAAA,CAAAA,OAAC,MAAG,UAAU,8DAA8D,MAAO,CAAE,WAAY,eAC/F,EAAA,SAAA,CAAAhC,EAAAA,IAAC,OAAI,UAAU,6FACb,eAACzC,EAAU,CAAA,UAAU,UAAU,CACjC,CAAA,EAAM,wBAAA,EAER,EACAyE,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAChC,EAAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,MAAO,CAAE,WAAY,UAAA,EAAc,SAAe,iBAAA,CAAA,EAC5FA,EAAAA,IAAC,IAAE,CAAA,UAAU,cAAc,MAAO,CAAE,WAAY,mBAAwB,EAAA,SAAAsE,EAAe,cAAe,CAAA,CAAA,EACxG,EACAtC,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAChC,EAAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,MAAO,CAAE,WAAY,UAAA,EAAc,SAAU,YAAA,CAAA,EACvFA,EAAAA,IAAC,IAAE,CAAA,UAAU,cAAc,MAAO,CAAE,WAAY,mBAAwB,EAAA,SAAAsE,EAAe,SAAU,CAAA,CAAA,EACnG,EACAtC,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAChC,EAAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,MAAO,CAAE,WAAY,UAAA,EAAc,SAAK,OAAA,CAAA,EAClFA,EAAAA,IAAC,IAAE,CAAA,UAAU,cAAc,MAAO,CAAE,WAAY,mBAAwB,EAAA,SAAAsE,EAAe,KAAM,CAAA,CAAA,EAC/F,EACCA,EAAe,SACbtC,OAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAChC,EAAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,MAAO,CAAE,WAAY,UAAA,EAAc,SAAO,SAAA,CAAA,EACpFA,EAAAA,IAAC,IAAE,CAAA,UAAU,cAAc,MAAO,CAAE,WAAY,mBAAwB,EAAA,SAAAsE,EAAe,OAAQ,CAAA,CAAA,EACjG,EAEDA,EAAe,MACbtC,OAAA,MAAA,CAAI,UAAU,+CACb,SAAA,CAAChC,EAAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,MAAO,CAAE,WAAY,UAAA,EAAc,SAAI,MAAA,CAAA,EACjFgC,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAAChC,EAAAA,IAAA,MAAA,CAAI,UAAU,yEACb,SAAAA,EAAA,IAAC,MAAA,CACC,IAAK,IAAI,gBAAgBsE,EAAe,IAAI,EAC5C,IAAI,eACJ,UAAU,iDAAA,CAAA,EAEd,EACAtE,EAAAA,IAAC,IAAE,CAAA,UAAU,cAAc,MAAO,CAAE,WAAY,mBAAoB,EAAI,SAAesE,EAAA,KAAK,IAAK,CAAA,CAAA,CACnG,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,EAEAtC,EAAAA,KAAC,MAAI,CAAA,UAAU,oEACb,SAAA,CAAAA,OAAC,MAAG,UAAU,8DAA8D,MAAO,CAAE,WAAY,eAC/F,EAAA,SAAA,CAAAhC,EAAAA,IAAC,OAAI,UAAU,6FACb,eAACoC,EAAK,CAAA,UAAU,UAAU,CAC5B,CAAA,EAAM,kBAAA,EAER,EAECoC,EAAgB,OAAS,QACvB,MAAI,CAAA,UAAU,YACZ,SAAgBA,EAAA,IAAI,CAAC3F,EAAM2E,UACzB,MAAkB,CAAA,UAAU,0GAC3B,SAACxB,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAChC,EAAAA,IAAA,IAAA,CAAE,UAAU,uCAAuC,MAAO,CAAE,WAAY,eAAA,EAAoB,SAAAnB,EAAK,IAAK,CAAA,EACvGmD,OAAC,KAAE,UAAU,uCAAuC,MAAO,CAAE,WAAY,UAAc,EAAA,SAAA,CAAA,IACnF,WAAWnD,EAAK,KAAK,EAAE,QAAQ,CAAC,EAAE,QAAA,EACtC,EACAmB,EAAAA,IAAC,IAAE,CAAA,UAAU,6BAA6B,MAAO,CAAE,WAAY,mBAAwB,EAAA,SAAAnB,EAAK,WAAY,CAAA,CAAA,EAC1G,EACAmB,EAAAA,IAAC,OAAI,UAAU,qFACb,eAACoC,EAAK,CAAA,UAAU,wBAAyB,CAAA,CAC3C,CAAA,CAAA,CACF,CAAA,CAZQ,EAAAvD,EAAK,EAaf,CACD,CACH,CAAA,EAEAmB,EAAAA,IAAC,IAAE,CAAA,UAAU,8DAA8D,MAAO,CAAE,WAAY,qBAAuB,SAEvH,sEAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,EAEAgC,EAAAA,KAAC,MAAI,CAAA,UAAU,2CACb,SAAA,CAAAhC,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS,IAAMqE,EAAe,CAAC,EAC/B,UAAU,yGACV,MAAO,CAAE,WAAY,UAAW,EACjC,SAAA,MAAA,CAED,EACArE,EAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS+E,EACT,SAAU3E,GAAgBoE,EAAgB,SAAW,EACrD,UAAW,iHAAkHpE,GAAgBoE,EAAgB,SAAW,EAAK,gCAAkC,EAAE,GACjN,MAAO,CAAE,WAAY,UAAW,EAE/B,SACCpE,EAAA4B,OAAC,MAAI,CAAA,UAAU,mCACb,SAAA,CAAAhC,EAAA,IAACL,EAAe,CAAA,KAAK,KAAK,UAAU,OAAO,EAAE,eAAA,CAAA,CAE/C,EAEA,uBAAA,CAAA,CAEJ,EACF,EAECK,EAAA,IAAA,MAAA,CAAI,UAAU,mBACb,SAACgC,EAAAA,KAAA,IAAA,CAAE,UAAU,wBAAwB,MAAO,CAAE,WAAY,mBAAuB,EAAA,SAAA,CAAA,+DACxB,IAAE,CAAA,KAAK,SAAS,UAAU,iCAAiC,SAAgB,mBAAA,EAAI,cAAM,IAAE,CAAA,KAAK,WAAW,UAAU,iCAAiC,SAAc,gBAAA,CAAA,CAAA,CAAA,CACzN,CACF,CAAA,CAAA,EACF,EAEF,MAEF,QACgBkD,EAAA,IAAA,CAGlB,aACG,MAAI,CAAA,UAAU,sGACb,SAAClD,EAAA,KAAA,MAAA,CAAI,UAAU,qDACZ,SAAA,CAAoBgD,EAAA,EACpBhF,EAAA,IAAA,MAAA,CAAI,UAAU,oDACZ,SACHkF,CAAA,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,ECnSMC,GAAiC,IAAM,CACrC,KAAA,CAAE,cAAAC,CAAc,EAAIC,EAAqC,EACzDC,EAAWC,EAAY,EACvBC,EAAWC,EAAY,EACvBC,EAAc,IAAI,gBAAgBF,EAAS,MAAM,EAGjDlF,EAAYoF,EAAY,IAAI,YAAY,EACxCC,EAAgBD,EAAY,IAAI,QAAQ,EAGxC,CAACE,EAAWC,CAAY,EAAIpF,EAAAA,SAAS,EAAI,EACzC,CAACqF,EAAsBC,CAAuB,EAAItF,EAAAA,SAAS,EAAK,EAChE,CAAC2D,EAAaC,CAAc,EAAI5D,EAAAA,SAAS,CAAC,EAC1C,CAACL,EAAc4F,CAAe,EAAIvF,EAAAA,SAAS,EAAK,EAChD,CAACJ,EAAQ4F,CAAS,EAAIxF,EAAAA,SAIzB,CAAA,CAAE,EAGC,CAAC6D,EAAgBC,CAAiB,EAAI9D,WAA6B,CACvE,eAAgB,GAChB,UAAW,GACX,MAAO,GACP,QAAS,GACT,KAAM,KACN,SAAU,GACV,gBAAiB,EAAA,CAClB,EACK,CAAC+B,EAAO0D,CAAQ,EAAIzF,EAAAA,SAA2B,CAAA,CAAE,EACjD,CAACxC,EAAckI,CAAe,EAAI1F,EAAAA,SAAiB,EAAE,EAIrD,CAAC2F,EAAiBC,CAAkB,EAAI5F,EAAAA,SAAS,EAAI,EAG3DG,EAAAA,UAAU,IAAM,EACkB,SAAY,CACtC,GAAA,CASF,GARAiF,EAAa,EAAI,EAGbvF,GAAaqF,IAAkB,WACjCU,EAAmB,EAAI,EAIrBjB,EAAe,CAEjB,MAAMkB,EAAa,MAAM1I,EAAkB,qBAAqBwH,CAAa,EAE7E,GAAIkB,EAAY,CAEV,GAAAA,EAAW,SAAW,UAAW,CACzBL,EAAA,CACR,QAAS,oEAAA,CACV,EACDJ,EAAa,EAAK,EAClB,MAAA,CAqBF,GAjBkBtB,EAAA,CAChB,eAAgB+B,EAAW,gBAC3B,UAAWA,EAAW,YAAc,GACpC,MAAOA,EAAW,MAClB,QAASA,EAAW,SAAW,GAC/B,SAAU,GACV,gBAAiB,GACjB,KAAMA,EAAW,KACjB,gBAAiBA,EAAW,KAAA,CAC7B,GAGGA,EAAW,SAAW,QAAUA,EAAW,qBAC7CD,EAAmB,EAAI,EAIrBC,EAAW,cAAe,CAC5BH,EAAgBG,EAAW,aAAa,EACxCjC,EAAe,CAAC,EAGZ,GAAA,CACF,KAAM,CAAE,KAAMkC,EAAe,MAAOC,CAAA,EAAe,MAAMxI,EACtD,KAAK,kBAAkB,EACvB,OAAO,GAAG,EACV,GAAG,gBAAiBsI,EAAW,aAAa,EAE3C,CAACE,GAAcD,GAAiBA,EAAc,OAAS,GACzDL,EAASK,CAAa,QAEjBE,EAAK,CACJ,QAAA,MAAM,iCAAkCA,CAAG,CAAA,CACrD,CAIEH,EAAW,SAAW,WACxB,MAAM1I,EAAkB,uBAAuB0I,EAAW,MAAO,UAAU,CAC7E,MAGUL,EAAA,CACR,QAAS,kFAAA,CACV,CACH,MAGUA,EAAA,CACR,QAAS,+EAAA,CACV,QAEIlI,EAAO,CACN,QAAA,MAAM,sCAAuCA,CAAK,EAChDkI,EAAA,CACR,QAAS,uEAAA,CACV,CAAA,QACD,CACAJ,EAAa,EAAK,CAAA,CAEtB,GAEwB,CACvB,EAAA,CAACT,EAAe9E,EAAWqF,CAAa,CAAC,EAgDtC,MAAAe,EAA6B,MAAO7I,GAIpC,CACJmI,EAAgB,EAAI,EACpBC,EAAU,CAAA,CAAE,EAER,GAAA,CAEI,MAAAU,EAAoB9I,EAAK,cAAgBI,EAC/C,GAAI,CAAC0I,EACG,MAAA,IAAI,MAAM,uBAAuB,EAIzC,MAAMC,EAAe/I,EAAK,MAAM,IAAI,MAAOgB,GAGvCA,EAAK,IACLA,EAAK,mBACLA,EAAK,iBACLA,EAAK,gBAAkB8H,EAEhB9H,EAIF,MAAMS,GAAkB,qBAC7B,CACE,KAAMT,EAAK,KACX,MAAOA,EAAK,MACZ,YAAaA,EAAK,YAClB,kBAAmBA,EAAK,kBACxB,gBAAiBA,EAAK,eACxB,EACA8H,CACF,CACD,EAGK,MAAA,QAAQ,IAAIC,CAAY,EAGxB,MAAAhJ,EAAkB,iBAAiB+I,EAAmB,CAC1D,sBAAuB,GACvB,WAAY,IAAI,KAAK,EAAE,YAAY,CAAA,CACpC,EAGGrC,EAAe,iBACjB,MAAM1G,EAAkB,uBACtB0G,EAAe,gBACf,YACAqC,CACF,EAIF,KAAM,CAAE,MAAA5I,CAAM,EAAI,MAAMC,EAAS,KAAK,OAAO,CAC3C,MAAOH,EAAK,WAAW,MACvB,SAAUA,EAAK,WAAW,SAC1B,QAAS,CACP,KAAM,CACJ,cAAe8I,EACf,UAAW9I,EAAK,WAAW,UAC3B,KAAM,kBAAA,CACR,CACF,CACD,EAEGE,GACM,QAAA,MAAM,+BAAgCA,CAAK,EAKrDgI,EAAwB,EAAI,QAErBhI,EAAY,CACX,QAAA,MAAM,iCAAkCA,CAAK,EAC3CkI,EAAA,CACR,QAASlI,EAAM,SAAW,iCAAA,CAC3B,CAAA,QACD,CACAiI,EAAgB,EAAK,CAAA,CAEzB,EAGA,OAAIJ,EAEA5F,EAAAA,IAAC6G,GACC,SAAC7G,EAAA,IAAA,MAAA,CAAI,UAAU,2EACb,SAAAgC,EAAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAAChC,EAAAA,IAAA8G,EAAA,CAAQ,UAAU,oDAAqD,CAAA,EACvE9G,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAAuC,yCAAA,CAAA,CAAA,CAC9E,CAAA,CACF,CAAA,EACF,EAKA8F,EAEA9F,EAAAA,IAAC6G,GACC,SAAC7G,EAAA,IAAA,MAAA,CAAI,UAAU,2EACb,SAAAgC,EAAAA,KAAC,MAAI,CAAA,UAAU,wEACb,SAAA,CAAAhC,EAAAA,IAAC,OAAI,UAAU,6EACb,eAACiF,EAAY,CAAA,UAAU,2BAA2B,CACpD,CAAA,EACCjF,EAAA,IAAA,KAAA,CAAG,UAAU,yCAAyC,SAAe,kBAAA,EACrEA,EAAA,IAAA,IAAA,CAAE,UAAU,qBAAqB,SAGlC,uJAAA,EACAgC,EAAAA,KAAC,MAAI,CAAA,UAAU,kFACb,SAAA,CAAAhC,EAAA,IAAC,SAAA,CACC,QAAS,IAAMsF,EAAS,YAAY,EACpC,UAAU,iGACX,SAAA,iBAAA,CAED,EACAtF,EAAA,IAAC,SAAA,CACC,QAAS,IAAMsF,EAAS,oBAAoB,EAC5C,UAAU,sHACX,SAAA,wBAAA,CAAA,CAED,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAKAjF,EAAO,SAAW,CAACpC,EAEnB+B,EAAAA,IAAC6G,GACC,SAAC7G,EAAA,IAAA,MAAA,CAAI,UAAU,2EACb,SAAAgC,EAAAA,KAAC,MAAI,CAAA,UAAU,wEACb,SAAA,CAAAhC,EAAAA,IAAC,OAAI,UAAU,2EACb,eAACoC,EAAK,CAAA,UAAU,yBAAyB,CAC3C,CAAA,EACCpC,EAAA,IAAA,KAAA,CAAG,UAAU,yCAAyC,SAAgB,mBAAA,EACtEA,EAAA,IAAA,IAAA,CAAE,UAAU,qBACV,WAAO,QACV,EACCA,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAE1C,oFAAA,EACAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,OAAO,SAAS,KAAO,gCACtC,UAAU,yGACX,SAAA,iBAAA,CAAA,CAED,CACF,CAAA,CACF,CAAA,EACF,EAMFA,EAAAA,IAAC6G,GACC,SAAC7G,EAAA,IAAA,MAAA,CAAI,UAAU,qDACb,SAAAgC,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,6BACb,SAAA,CAAChC,EAAA,IAAA,KAAA,CAAG,UAAU,qDAAqD,SAAqB,wBAAA,EACvFA,EAAA,IAAA,IAAA,CAAE,UAAU,+CAA+C,SAE5D,8FAAA,CAAA,CAAA,EACF,EAEAA,EAAA,IAAC+D,GAAA,CACC,YAAaK,EACb,sBAAuBE,EACvB,aAAc9B,EACd,WAAYkE,EACZ,aAAAtG,EACA,UAAWE,GAAa,OACxB,OAAAD,EACA,aAAApC,CAAA,CAAA,CACF,CACF,CAAA,CACF,CAAA,EACF,CAEJ","x_google_ignoreList":[0,1,2,3]}