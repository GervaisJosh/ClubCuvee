{"version":3,"file":"OnboardToken-CTUGkLp0.js","sources":["../../src/pages/onboarding/OnboardToken.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useSearchParams, useNavigate } from 'react-router-dom';\r\nimport { apiClient } from '../../lib/api-client';\r\nimport { supabase } from '../../lib/supabase';\r\nimport Button from '../../components/Button';\r\nimport Card from '../../components/Card';\r\nimport { CheckCircle, AlertCircle, Clock, CreditCard, Star, DollarSign, Phone } from 'lucide-react';\r\n\r\ninterface BusinessInviteData {\r\n  is_valid: boolean;\r\n  business_name: string;\r\n  business_email: string;\r\n  pricing_tier: string | null;\r\n  expires_at: string;\r\n}\r\n\r\ninterface PricingTier {\r\n  id: string;\r\n  name: string;\r\n  price_cents: number;\r\n  stripe_product_id: string;\r\n  stripe_price_id: string;\r\n}\r\n\r\ninterface CheckoutResponse {\r\n  success: boolean;\r\n  data: {\r\n    sessionId: string;\r\n    checkoutUrl: string;\r\n  };\r\n}\r\n\r\nconst OnboardToken: React.FC = () => {\r\n  const { token } = useParams<{ token: string }>();\r\n  const [searchParams] = useSearchParams();\r\n  const navigate = useNavigate();\r\n  \r\n  const [inviteData, setInviteData] = useState<BusinessInviteData | null>(null);\r\n  const [pricingTiers, setPricingTiers] = useState<PricingTier[]>([]);\r\n  const [selectedTierId, setSelectedTierId] = useState<string>('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [processingPayment, setProcessingPayment] = useState(false);\r\n  \r\n  const sessionId = searchParams.get('session_id');\r\n  const success = searchParams.get('success');\r\n  const canceled = searchParams.get('canceled');\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      setError('No invitation token provided');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    validateTokenAndLoadData();\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    if (sessionId && success) {\r\n      handlePaymentSuccess();\r\n    }\r\n  }, [sessionId, success]);\r\n\r\n  const validateTokenAndLoadData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      // Validate business invitation token\r\n      const tokenResponse = await apiClient.post<{\r\n        success: boolean;\r\n        data: BusinessInviteData;\r\n      }>('/api/validate-business-invitation', {\r\n        token: token\r\n      });\r\n\r\n      if (!tokenResponse.success || !tokenResponse.data.is_valid) {\r\n        setError('Invalid or expired business invitation token');\r\n        return;\r\n      }\r\n\r\n      setInviteData(tokenResponse.data);\r\n\r\n      // Load pricing tiers using the correct RPC function\r\n      const { data: tiersData, error: tiersError } = await supabase.rpc('get_active_business_pricing_tiers');\r\n      \r\n      if (tiersError) {\r\n        console.error('Error loading pricing tiers:', tiersError);\r\n        setError('Failed to load pricing options');\r\n        return;\r\n      }\r\n\r\n      setPricingTiers(tiersData || []);\r\n\r\n      // Pre-select suggested tier if provided (pricing_tier is now a UUID)\r\n      if (tokenResponse.data.pricing_tier && tiersData) {\r\n        const suggestedTier = tiersData.find((tier: PricingTier) => \r\n          tier.id === tokenResponse.data.pricing_tier\r\n        );\r\n        if (suggestedTier) {\r\n          setSelectedTierId(suggestedTier.id);\r\n        }\r\n      }\r\n\r\n    } catch (err: any) {\r\n      console.error('Error validating token and loading data:', err);\r\n      setError(err.message || 'Failed to validate invitation');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handlePaymentSuccess = async () => {\r\n    try {\r\n      setProcessingPayment(true);\r\n      \r\n      // Verify the payment with our business subscription endpoint\r\n      const response = await apiClient.post<{\r\n        success: boolean;\r\n        data: {\r\n          subscription: {\r\n            id: string;\r\n            status: string;\r\n            currentPeriodEnd: number;\r\n          };\r\n          pricing_tier: string;\r\n        };\r\n      }>('/api/verify-business-subscription', { token, sessionId });\r\n      \r\n      const subscription = response.data.subscription;\r\n      \r\n      if (subscription.status === 'active') {\r\n        // Redirect to business setup form\r\n        navigate(`/onboard/${token}/setup?session_id=${sessionId}`);\r\n      } else {\r\n        setError('Payment verification failed. Please contact support.');\r\n      }\r\n    } catch (err: any) {\r\n      console.error('Error verifying payment:', err);\r\n      setError('Payment verification failed. Please contact support.');\r\n    } finally {\r\n      setProcessingPayment(false);\r\n    }\r\n  };\r\n\r\n  const handleTierSelection = async () => {\r\n    if (!selectedTierId) {\r\n      setError('Please select a pricing tier');\r\n      return;\r\n    }\r\n\r\n    const selectedTier = pricingTiers.find(tier => tier.id === selectedTierId);\r\n    if (!selectedTier) {\r\n      setError('Selected tier not found');\r\n      return;\r\n    }\r\n\r\n    if (!selectedTier.stripe_price_id) {\r\n      setError('This tier is not available for online signup');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setProcessingPayment(true);\r\n      setError(null);\r\n\r\n      const response = await apiClient.post<CheckoutResponse>(\r\n        '/api/create-business-checkout',\r\n        { \r\n          token,\r\n          tier_id: selectedTierId\r\n        }\r\n      );\r\n\r\n      if (response.success && response.data.checkoutUrl) {\r\n        // Redirect to Stripe Checkout\r\n        window.location.href = response.data.checkoutUrl;\r\n      } else {\r\n        setError('Failed to create checkout session');\r\n      }\r\n    } catch (err: any) {\r\n      console.error('Error creating checkout session:', err);\r\n      setError(err.message || 'Failed to start checkout process');\r\n      setProcessingPayment(false);\r\n    }\r\n  };\r\n\r\n  const formatPrice = (priceInCents: number) => {\r\n    return `$${(priceInCents / 100).toFixed(0)}`;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-[#fdfaf7] px-6 py-10\">\r\n        <div className=\"text-center\">\r\n          <div className=\"h-12 w-12 animate-spin border-4 border-[#800020] border-t-transparent rounded-full mx-auto mb-6\"></div>\r\n          <p className=\"text-gray-600 text-lg\">Validating your invitation...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (processingPayment) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-[#fdfaf7] px-6 py-10\">\r\n        <div className=\"text-center\">\r\n          <div className=\"h-12 w-12 animate-spin border-4 border-[#800020] border-t-transparent rounded-full mx-auto mb-6\"></div>\r\n          <p className=\"text-gray-600 text-lg\">Processing your payment...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (canceled) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-[#fdfaf7] px-6 py-10\">\r\n        <Card className=\"max-w-md mx-auto p-8 text-center\">\r\n          <AlertCircle className=\"h-16 w-16 text-yellow-500 mx-auto mb-4\" />\r\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-4\">Payment Canceled</h1>\r\n          <p className=\"text-gray-600 mb-6\">\r\n            Your payment was canceled. You can try again when you're ready.\r\n          </p>\r\n          <Button onClick={() => window.location.reload()} className=\"w-full\">\r\n            Try Again\r\n          </Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error || !inviteData) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-[#fdfaf7] px-6 py-10\">\r\n        <Card className=\"max-w-md mx-auto p-8 text-center\">\r\n          <AlertCircle className=\"h-16 w-16 text-red-500 mx-auto mb-4\" />\r\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-4\">Invalid Invitation</h1>\r\n          <p className=\"text-gray-600 mb-6\">\r\n            {error || 'This invitation link is invalid or has expired. Please request a new one.'}\r\n          </p>\r\n          <Button onClick={() => navigate('/landing')} variant=\"secondary\" className=\"w-full\">\r\n            Return Home\r\n          </Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const selectedTier = pricingTiers.find(tier => tier.id === selectedTierId);\r\n  const expiresAt = new Date(inviteData.expires_at);\r\n  const timeUntilExpiry = expiresAt.getTime() - Date.now();\r\n  const hoursUntilExpiry = Math.floor(timeUntilExpiry / (1000 * 60 * 60));\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-[#fdfaf7] px-6 py-10\">\r\n      <div className=\"max-w-4xl mx-auto\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-8\">\r\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">\r\n            Welcome to Club Cuv√©e\r\n          </h1>\r\n          <p className=\"text-xl text-gray-600 mb-2\">\r\n            Complete your business registration for <strong>{inviteData.business_name}</strong>\r\n          </p>\r\n          <p className=\"text-gray-500\">\r\n            Invitation sent to: {inviteData.business_email}\r\n          </p>\r\n        </div>\r\n\r\n        {/* Expiry Warning */}\r\n        {hoursUntilExpiry < 24 && hoursUntilExpiry > 0 && (\r\n          <Card className=\"p-4 mb-6 bg-yellow-50 border-yellow-200\">\r\n            <div className=\"flex items-center\">\r\n              <Clock className=\"h-5 w-5 text-yellow-500 mr-2\" />\r\n              <p className=\"text-sm text-yellow-700\">\r\n                This invitation expires in {hoursUntilExpiry} hours. Complete your registration soon!\r\n              </p>\r\n            </div>\r\n          </Card>\r\n        )}\r\n\r\n        {/* Main Content */}\r\n        <Card className=\"p-8 mb-8\">\r\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-6 text-center\">\r\n            Choose Your Club Cuv√©e Plan\r\n          </h2>\r\n          \r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\r\n            {pricingTiers.map((tier) => (\r\n              <div\r\n                key={tier.id}\r\n                className={`border rounded-lg p-6 cursor-pointer transition-all relative ${\r\n                  selectedTierId === tier.id\r\n                    ? 'border-[#800020] bg-[#800020]/5 shadow-lg'\r\n                    : 'border-gray-200 hover:border-gray-300 hover:shadow-md'\r\n                }`}\r\n                onClick={() => setSelectedTierId(tier.id)}\r\n              >\r\n                <div className=\"text-center\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"tier\"\r\n                    value={tier.id}\r\n                    checked={selectedTierId === tier.id}\r\n                    onChange={() => setSelectedTierId(tier.id)}\r\n                    className=\"sr-only\"\r\n                  />\r\n                  \r\n                  {/* Suggested badge */}\r\n                  {inviteData.pricing_tier && tier.id === inviteData.pricing_tier && (\r\n                    <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2\">\r\n                      <span className=\"bg-[#800020] text-white px-3 py-1 rounded-full text-xs font-medium flex items-center\">\r\n                        <Star className=\"w-3 h-3 mr-1\" />\r\n                        Suggested\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  \r\n                  <h3 className=\"text-xl font-bold text-gray-900 mb-2\">{tier.name}</h3>\r\n                  <div className=\"mb-4\">\r\n                    <div className=\"text-3xl font-bold text-[#800020]\">\r\n                      {formatPrice(tier.price_cents)}\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-500\">per month</div>\r\n                  </div>\r\n                  \r\n                  {selectedTierId === tier.id && (\r\n                    <CheckCircle className=\"w-6 h-6 text-[#800020] mx-auto\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n\r\n          {error && (\r\n            <div className=\"p-3 bg-red-50 border border-red-200 rounded-md mb-6\">\r\n              <p className=\"text-sm text-red-600 flex items-center\">\r\n                <AlertCircle className=\"w-4 h-4 mr-2\" />\r\n                {error}\r\n              </p>\r\n            </div>\r\n          )}\r\n\r\n          {/* Action Button */}\r\n          <div className=\"text-center\">\r\n            <Button\r\n              onClick={handleTierSelection}\r\n              disabled={!selectedTierId || processingPayment}\r\n              className=\"px-8 py-3\"\r\n            >\r\n              <CreditCard className=\"w-5 h-5 mr-2\" />\r\n              {processingPayment ? 'Starting Checkout...' : 'Proceed to Payment'}\r\n            </Button>\r\n          </div>\r\n\r\n          {selectedTier && (\r\n            <p className=\"text-xs text-gray-500 text-center mt-4\">\r\n              Secure payment processing by Stripe ‚Ä¢ Cancel anytime\r\n            </p>\r\n          )}\r\n        </Card>\r\n\r\n        {/* What's Next */}\r\n        <Card className=\"p-6\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">What happens next?</h3>\r\n          <div className=\"space-y-3 text-sm text-gray-600\">\r\n            <div className=\"flex items-start\">\r\n              <div className=\"w-6 h-6 bg-[#800020] text-white rounded-full flex items-center justify-center text-xs mr-3 mt-0.5\">\r\n                1\r\n              </div>\r\n              <p>Complete your subscription payment via Stripe</p>\r\n            </div>\r\n            <div className=\"flex items-start\">\r\n              <div className=\"w-6 h-6 bg-[#800020] text-white rounded-full flex items-center justify-center text-xs mr-3 mt-0.5\">\r\n                2\r\n              </div>\r\n              <p>Set up your business profile and wine club tiers</p>\r\n            </div>\r\n            <div className=\"flex items-start\">\r\n              <div className=\"w-6 h-6 bg-[#800020] text-white rounded-full flex items-center justify-center text-xs mr-3 mt-0.5\">\r\n                3\r\n              </div>\r\n              <p>Upload your wine inventory and configure recommendations</p>\r\n            </div>\r\n            <div className=\"flex items-start\">\r\n              <div className=\"w-6 h-6 bg-[#800020] text-white rounded-full flex items-center justify-center text-xs mr-3 mt-0.5\">\r\n                4\r\n              </div>\r\n              <p>Start accepting customer memberships immediately</p>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n\r\n        {/* Support */}\r\n        <div className=\"text-center mt-8 text-sm text-gray-500\">\r\n          <p>\r\n            Need help? Contact our support team at{' '}\r\n            <a href=\"mailto:support@clubcuvee.com\" className=\"text-[#800020] hover:underline\">\r\n              support@clubcuvee.com\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OnboardToken;"],"names":["OnboardToken","token","useParams","searchParams","useSearchParams","navigate","useNavigate","inviteData","setInviteData","useState","pricingTiers","setPricingTiers","selectedTierId","setSelectedTierId","loading","setLoading","error","setError","processingPayment","setProcessingPayment","sessionId","success","canceled","useEffect","validateTokenAndLoadData","handlePaymentSuccess","tokenResponse","apiClient","tiersData","tiersError","supabase","suggestedTier","tier","err","handleTierSelection","selectedTier","response","formatPrice","priceInCents","jsxs","jsx","Card","AlertCircle","Button","timeUntilExpiry","hoursUntilExpiry","Clock","Star","CheckCircle","CreditCard"],"mappings":"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"}